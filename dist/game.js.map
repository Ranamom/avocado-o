{
  "version": 3,
  "sources": ["../node_modules/howler/dist/howler.js", "../node_modules/kaboom/src/math.ts", "../node_modules/kaboom/src/utils.ts", "../node_modules/kaboom/src/gfx.ts", "../node_modules/kaboom/src/app.ts", "../node_modules/kaboom/src/audio.ts", "../node_modules/kaboom/src/assets.ts", "../node_modules/kaboom/src/logger.ts", "../node_modules/kaboom/src/plugins/kaboom.ts", "../node_modules/kaboom/src/kaboom.ts", "../code/main.js"],
  "sourcesContent": ["/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, \u221E]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n", "import {\n\tVec2,\n\tVec3,\n\tVec4,\n\tMat4,\n\tColor,\n\tQuad,\n\tPoint,\n\tRect,\n\tCircle,\n\tPolygon,\n\tLine,\n\tArea,\n\tRNG,\n} from \"./types\";\n\nfunction deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nfunction rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nfunction clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nfunction map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nfunction mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nfunction vec2(...args): Vec2 {\n\n\tif (args.length === 0) {\n\t\treturn vec2(0, 0);\n\t}\n\n\tif (args.length === 1) {\n\t\tif (typeof args[0] === \"number\") {\n\t\t\treturn vec2(args[0], args[0]);\n\t\t} else if (isVec2(args[0])) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tx: args[0],\n\t\ty: args[1],\n\t\tclone(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t\tadd(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x + p2.x, this.y + p2.y);\n\t\t},\n\t\tsub(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x - p2.x, this.y - p2.y);\n\t\t},\n\t\tscale(...args): Vec2 {\n\t\t\tconst s = vec2(...args);\n\t\t\treturn vec2(this.x * s.x, this.y * s.y);\n\t\t},\n\t\tdist(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.sqrt(\n\t\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t\t);\n\t\t},\n\t\tlen(): number {\n\t\t\treturn this.dist(vec2(0, 0));\n\t\t},\n\t\tunit(): Vec2 {\n\t\t\treturn this.scale(1 / this.len());\n\t\t},\n\t\tnormal(): Vec2 {\n\t\t\treturn vec2(this.y, -this.x);\n\t\t},\n\t\tdot(p2: Vec2): number {\n\t\t\treturn this.x * p2.x + this.y * p2.y;\n\t\t},\n\t\tangle(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t\t},\n\t\tlerp(p2: Vec2, t: number): Vec2 {\n\t\t\treturn vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t\t},\n\t\ttoFixed(n: number): Vec2 {\n\t\t\treturn vec2(this.x.toFixed(n), this.y.toFixed(n));\n\t\t},\n\t\teq(other: Vec2): boolean {\n\t\t\treturn this.x === other.x && this.y === other.y;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t\t},\n\t};\n}\n\nfunction dir(deg: number): Vec2 {\n\tconst angle = deg2rad(deg);\n\treturn vec2(Math.cos(angle), Math.sin(angle));\n}\n\nfunction vec3(x: number, y: number, z: number): Vec3 {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tz: z,\n\t\txy(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t};\n}\n\nfunction isVec2(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t;\n}\n\nfunction isVec3(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t&& p.z !== undefined\n\t\t;\n}\n\nfunction isColor(c: any): boolean {\n\treturn c !== undefined\n\t\t&& c.r !== undefined\n\t\t&& c.g !== undefined\n\t\t&& c.b !== undefined\n\t\t;\n}\n\nfunction isMat4(m: any): Mat4 {\n\tif (\n\t\tm !== undefined\n\t\t&& Array.isArray(m.m)\n\t\t&& m.m.length === 16\n\t) {\n\t\treturn m;\n\t}\n}\n\nfunction rgb(...args): Color {\n\n\tif (args.length === 0) {\n\t\treturn rgb(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgb(args[0].r, args[0].g, args[0].b);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn rgb.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tr: clamp(~~args[0], 0, 255),\n\t\tg: clamp(~~args[1], 0, 255),\n\t\tb: clamp(~~args[2], 0, 255),\n\t\tclone(): Color {\n\t\t\treturn rgb(this.r, this.g, this.b);\n\t\t},\n\t\tlighten(a: number): Color {\n\t\t\treturn rgb(this.r + a, this.g + a, this.b + a);\n\t\t},\n\t\tdarken(a: number): Color {\n\t\t\treturn this.lighten(-a);\n\t\t},\n\t\tinvert(): Color {\n\t\t\treturn rgb(255 - this.r, 255 - this.g, 255 - this.b);\n\t\t},\n\t\tmult(other: Color): Color {\n\t\t\treturn rgb(\n\t\t\t\tthis.r * other.r / 255,\n\t\t\t\tthis.g * other.g / 255,\n\t\t\t\tthis.b * other.b / 255,\n\t\t\t);\n\t\t},\n\t\teq(other: Color): boolean {\n\t\t\treturn this.r === other.r\n\t\t\t\t&& this.g === other.g\n\t\t\t\t&& this.b === other.b\n\t\t\t\t;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t\t},\n\t};\n\n}\n\nfunction hsl2rgb(h: number, s: number, l: number): Color {\n\n\tif (s == 0){\n\t\treturn rgb(255 * l, 255 * l, 255 * l);\n\t}\n\n\tconst hue2rgb = (p, q, t) => {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6;\n\t\treturn p;\n\t}\n\n\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\tconst p = 2 * l - q;\n\tconst r = hue2rgb(p, q, h + 1 / 3);\n\tconst g = hue2rgb(p, q, h);\n\tconst b = hue2rgb(p, q, h - 1 / 3);\n\n\treturn rgb(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));\n\n}\n\nfunction quad(x: number, y: number, w: number, h: number): Quad {\n\treturn {\n\t\tx: x ?? 0,\n\t\ty: y ?? 0,\n\t\tw: w ?? 1,\n\t\th: h ?? 1,\n\t\tscale(other: Quad): Quad {\n\t\t\treturn quad(\n\t\t\t\tthis.x + this.w * other.x,\n\t\t\t\tthis.y + this.h * other.y,\n\t\t\t\tthis.w * other.w,\n\t\t\t\tthis.h * other.h\n\t\t\t);\n\t\t},\n\t\tclone(): Quad {\n\t\t\treturn quad(this.x, this.y, this.w, this.h);\n\t\t},\n\t\teq(other: Quad): boolean {\n\t\t\treturn this.x === other.x\n\t\t\t\t&& this.y === other.y\n\t\t\t\t&& this.w === other.w\n\t\t\t\t&& this.h === other.h;\n\t\t},\n\t};\n}\n\nfunction mat4(m?: number[]): Mat4 {\n\n\treturn {\n\n\t\tm: m ? [...m] : [\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t],\n\n\t\tclone(): Mat4 {\n\t\t\treturn mat4(this.m);\n\t\t},\n\n\t\tmult(other: Mat4): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t\tmultVec4(p: Vec4): Vec4 {\n\t\t\treturn {\n\t\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t\t};\n\t\t},\n\n\t\tmultVec3(p: Vec3): Vec3 {\n\t\t\tconst p4 = this.multVec4({\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tz: p.z,\n\t\t\t\tw: 1.0,\n\t\t\t});\n\t\t\treturn vec3(p4.x, p4.y, p4.z);\n\t\t},\n\n\t\tmultVec2(p: Vec2): Vec2 {\n\t\t\treturn vec2(\n\t\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t\t);\n\t\t},\n\n\t\ttranslate(p: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tp.x, p.y, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tscale(s: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\ts.x, 0, 0, 0,\n\t\t\t\t0, s.y, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateX(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateY(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateZ(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tinvert(): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\t\tconst det =\n\t\t\t\tthis.m[0] * out[0] +\n\t\t\t\tthis.m[1] * out[4] +\n\t\t\t\tthis.m[2] * out[8] +\n\t\t\t\tthis.m[3] * out[12];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t};\n\n}\n\nfunction wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n// TODO: let user pass seed\nconst defRNG = rng(Date.now());\n\nfunction rng(seed: number): RNG {\n\treturn {\n\t\tseed: seed,\n\t\tgen(...args) {\n\t\t\tif (args.length === 0) {\n\t\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\t\treturn this.seed / M;\n\t\t\t} else if (args.length === 1) {\n\t\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t\t} else if (isVec2(args[0])) {\n\t\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t\t} else if (isColor(args[0])) {\n\t\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t\t}\n\t\t\t} else if (args.length === 2) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t\t} else if (isVec2(args[0]) && isVec2(args[1])) {\n\t\t\t\t\treturn vec2(\n\t\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t\t);\n\t\t\t\t} else if (isColor(args[0]) && isColor(args[1])) {\n\t\t\t\t\treturn rgb(\n\t\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nfunction rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nfunction randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nfunction chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nfunction choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nfunction testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nfunction testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nfunction testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nfunction testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nfunction testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nfunction testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nfunction testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\n// TODO\nfunction testRectCircle(r: Rect, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, [\n\t\tr.p1,\n\t\tvec2(r.p2.x, r.p1.y),\n\t\tr.p2,\n\t\tvec2(r.p1.x, r.p2.y),\n\t]);\n}\n\n// TODO\nfunction testLinePoint(l: Line, pt: Vec2): boolean {\n\treturn false;\n}\n\n// TODO\nfunction testLineCircle(l: Line, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true;\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.length; i++) {\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\t\tif (testLineLine(l, { p1, p2 })) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n}\n\nfunction testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.dist(p) < c.radius;\n}\n\nfunction testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.dist(c2.center) < c1.radius + c2.radius;\n}\n\n// TODO\nfunction testCirclePolygon(c: Circle, p: Polygon): boolean {\n\treturn false;\n}\n\nfunction testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.length; i++) {\n\t\tconst l = {\n\t\t\tp1: p1[i],\n\t\t\tp2: p1[(i + 1) % p1.length],\n\t\t};\n\t\tif (testLinePolygon(l, p2)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction testPolygonPoint(p: Polygon, pt: Point): boolean {\n\n\tlet has = false;\n\n\tfor (let i = 0; i < p.length; i++) {\n\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\n\t\tif (\n\t\t\t((p1.y > pt.y && p2.y < pt.y) || (p1.y < pt.y && p2.y > pt.y))\n\t\t\t&& (pt.x < (p2.x - p1.x) * (pt.y - p1.y) / (p2.y - p1.y) + p1.x)\n\t\t) {\n\t\t\thas = !has;\n\t\t}\n\n\t}\n\n\treturn has;\n\n}\n\nfunction testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.eq(p2);\n}\n\nfunction testAreaRect(a: Area, r: Rect): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectRect(r, a);\n\t\tcase \"line\": return testRectLine(r, a);\n\t\tcase \"circle\": return testRectCircle(r, a);\n\t\tcase \"polygon\": return testRectPolygon(r, a.pts);\n\t\tcase \"point\": return testRectPoint(r, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaLine(a: Area, l: Line): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectLine(a, l);\n\t\tcase \"line\": return Boolean(testLineLine(a, l));\n\t\tcase \"circle\": return testLineCircle(l, a);\n\t\tcase \"polygon\": return testLinePolygon(l, a.pts);\n\t\tcase \"point\": return testLinePoint(l, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaCircle(a: Area, c: Circle): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectCircle(a, c);\n\t\tcase \"line\": return testLineCircle(a, c);\n\t\tcase \"circle\": return testCircleCircle(a, c);\n\t\tcase \"polygon\": return testCirclePolygon(c, a.pts);\n\t\tcase \"point\": return testCirclePoint(c, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPolygon(a: Area, p: Polygon): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPolygon(a, p);\n\t\tcase \"line\": return testLinePolygon(a, p);\n\t\tcase \"circle\": return testCirclePolygon(a, p);\n\t\tcase \"polygon\": return testPolygonPolygon(p, a.pts);\n\t\tcase \"point\": return testPolygonPoint(p, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPoint(a: Area, p: Point): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPoint(a, p);\n\t\tcase \"line\": return testLinePoint(a, p);\n\t\tcase \"circle\": return testCirclePoint(a, p);\n\t\tcase \"polygon\": return testPolygonPoint(a.pts, p);\n\t\tcase \"point\": return testPointPoint(a.pt, p);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaArea(a1: Area, a2: Area): boolean {\n\tswitch (a2.shape) {\n\t\tcase \"rect\": return testAreaRect(a1, a2);\n\t\tcase \"line\": return testAreaLine(a1, a2);\n\t\tcase \"circle\": return testAreaCircle(a1, a2);\n\t\tcase \"polygon\": return testAreaPolygon(a1, a2.pts);\n\t\tcase \"point\": return testAreaPoint(a1, a2.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a2 as Area).shape}`);\n}\n\nfunction minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nfunction makeLine(p1: Vec2, p2: Vec2): Line {\n\treturn {\n\t\tp1: p1.clone(),\n\t\tp2: p2.clone(),\n\t};\n}\n\nexport {\n\tvec2,\n\tvec3,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n};\n", "class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nfunction deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nfunction downloadURL(url: string, filename: string) {\n\tconst a = document.createElement(\"a\");\n\tdocument.body.appendChild(a);\n\ta.setAttribute(\"style\", \"display: none\");\n\ta.href = url;\n\ta.download = filename;\n\ta.click();\n\tdocument.body.removeChild(a);\n}\n\nfunction downloadBlob(blob: Blob, filename: string) {\n\tconst url = URL.createObjectURL(blob);\n\tdownloadURL(url, filename);\n\tURL.revokeObjectURL(url);\n}\n\nexport {\n\tdeepEq,\n\tIDList,\n\tdownloadBlob,\n\tdownloadURL,\n};\n", "import {\n\tvec2,\n\tvec3,\n\tquad,\n\trgb,\n\tmat4,\n\tdir,\n\tdeg2rad,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n} from \"./math\";\n\nimport {\n\tdeepEq,\n} from \"./utils\";\n\nimport {\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tOrigin,\n\tGfxShader,\n\tGfxTexture,\n\tGfxTexData,\n\tGfxFont,\n\tUniform,\n\tTexFilter,\n\tRenderProps,\n\tCharTransform,\n\tTexWrap,\n\tFormattedText,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tDrawTextOpt,\n} from \"./types\";\n\ntype GfxCtx = {\n\tvbuf: WebGLBuffer,\n\tibuf: WebGLBuffer,\n\tvqueue: number[],\n\tiqueue: number[],\n\tbackground: Color,\n\tdefShader: GfxShader,\n\tcurShader: GfxShader,\n\tdefTex: GfxTexture,\n\tcurTex: GfxTexture,\n\tbgTex: GfxTexture,\n\tcurUniform: Uniform,\n\ttransform: Mat4,\n\ttransformStack: Mat4[],\n\tdrawCalls: number,\n\tlastDrawCalls: number,\n\twidth: number,\n\theight: number,\n};\n\ntype GfxOpt = {\n\tbackground?: Color,\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\ttexFilter?: TexFilter,\n    stretch?: boolean,\n    letterbox?: boolean,\n};\n\ntype DrawTextureOpt = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\n// TODO: name\ntype DrawTextOpt2 = RenderProps & {\n\ttext: string,\n\tfont?: GfxFont,\n\tsize?: number,\n\twidth?: number,\n\torigin?: Origin | Vec2,\n\ttransform?: (idx: number, ch: string) => CharTransform,\n}\n\ninterface GfxTexOpt {\n\tfilter?: TexFilter,\n\twrap?: TexWrap,\n}\n\ntype Gfx = {\n\twidth(): number,\n\theight(): number,\n\tscale(): number,\n\tbackground(): Color,\n\tmakeTex(data: GfxTexData, opt?: GfxTexOpt): GfxTexture,\n\tmakeShader(vert: string, frag: string): GfxShader,\n\tmakeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont,\n\tdrawTexture(opt: DrawTextureOpt),\n\tdrawText(opt: DrawTextOpt2),\n\tdrawFmtText(ftext: FormattedText),\n\tdrawRect(opt: DrawRectOpt),\n\tdrawLine(opt: DrawLineOpt),\n\tdrawLines(opt: DrawLinesOpt),\n\tdrawTriangle(opt: DrawTriangleOpt),\n\tdrawCircle(opt: DrawCircleOpt),\n\tdrawEllipse(opt: DrawEllipseOpt),\n\tdrawPolygon(opt: DrawPolygonOpt),\n\tdrawUVQuad(opt: DrawUVQuadOpt),\n\tfmtText(opt: DrawTextOpt2): FormattedText,\n\tframeStart(),\n\tframeEnd(),\n\tpushTransform(): void,\n\tpopTransform(): void,\n\tpushTranslate(x: number, y: number): void,\n\tpushTranslate(p: Vec2): void,\n\tpushScale(sx: number, sy: number): void,\n\tpushScale(s: number): void,\n\tpushScale(s: Vec2): void,\n\tpushRotateX(angle: number): void,\n\tpushRotateY(angle: number): void,\n\tpushRotateZ(angle: number): void,\n\tapplyMatrix(m: Mat4),\n\tdrawCalls(): number,\n};\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction gfxInit(gl: WebGLRenderingContext, gopt: GfxOpt): Gfx {\n\n\tconst gfx: GfxCtx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG);\n\t\tconst emptyTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t\t);\n\n\t\tconst c = gopt.background ?? rgb(0, 0, 0);\n\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, 1);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tconst vbuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tconst ibuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\t// a checkerboard texture\n\t\tconst bgTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t);\n\n\t\treturn {\n\t\t\tdrawCalls: 0,\n\t\t\tlastDrawCalls: 0,\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\t\t\ttransform: mat4(),\n\t\t\ttransformStack: [],\n\t\t\tbackground: c,\n\t\t\tbgTex: bgTex,\n\t\t\twidth: gopt.width,\n\t\t\theight: gopt.height,\n\t\t};\n\n\t})();\n\n\tfunction powerOfTwo(n) {\n\t\treturn (Math.log(n) / Math.log(2)) % 1 === 0;\n\t}\n\n\tfunction makeTex(data: GfxTexData, opt: GfxTexOpt = {}): GfxTexture {\n\n\t\tconst id = gl.createTexture();\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\t\tconst filter = (() => {\n\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\t\tdefault: return gl.NEAREST;\n\t\t\t}\n\t\t})();\n\n\t\tconst wrap = (() => {\n\t\t\tswitch (opt.wrap) {\n\t\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t\t}\n\t\t})();\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn {\n\t\t\twidth: data.width,\n\t\t\theight: data.height,\n\t\t\tbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t\t},\n\t\t\tunbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\t},\n\t\t};\n\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tlet msg;\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\t\tgl.shaderSource(vertShader, vcode);\n\t\tgl.shaderSource(fragShader, fcode);\n\t\tgl.compileShader(vertShader);\n\t\tgl.compileShader(fragShader);\n\n\t\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst id = gl.createProgram();\n\n\t\tgl.attachShader(id, vertShader);\n\t\tgl.attachShader(id, fragShader);\n\n\t\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\t\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\t\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\t\tgl.linkProgram(id);\n\n\t\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\t\tif (msg !== \"\\n\") {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(id);\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null);\n\t\t\t},\n\n\t\t\tbindAttribs() {\n\t\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\t\t\t\tgl.enableVertexAttribArray(0);\n\t\t\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\t\t\t\tgl.enableVertexAttribArray(1);\n\t\t\t\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\t\t\t\tgl.enableVertexAttribArray(2);\n\t\t\t},\n\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tthis.bind();\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name];\n\t\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t\t} else if (isMat4(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t\t} else if (isColor(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t\t} else if (isVec3(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t\t} else if (isVec2(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.unbind();\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw;\n\t\tconst rows = tex.height / gh;\n\t\tconst qw = 1.0 / cols;\n\t\tconst qh = 1.0 / rows;\n\t\tconst map: Record<string, Vec2> = {};\n\t\tconst charMap = chars.split(\"\").entries();\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = vec2(\n\t\t\t\t(i % cols) * qw,\n\t\t\t\tMath.floor(i / cols) * qh,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tqw: qw,\n\t\t\tqh: qh,\n\t\t};\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\ttex: GfxTexture = gfx.defTex,\n\t\tshader: GfxShader = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\ttex = tex ?? gfx.defTex;\n\t\tshader = shader ?? gfx.defShader;\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t\t) {\n\t\t\tflush();\n\t\t}\n\n\t\tgfx.curTex = tex;\n\t\tgfx.curShader = shader;\n\t\tgfx.curUniform = uniform;\n\n\t\tindices.forEach((i) => {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE);\n\t\t});\n\n\t\tverts.forEach((v) => {\n\t\t\tconst pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t);\n\t\t});\n\n\t}\n\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tgfx.curShader.send(gfx.curUniform);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\t\tgfx.curShader.bind();\n\t\tgfx.curShader.bindAttribs();\n\t\tgfx.curTex.bind();\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\t\tgfx.curTex.unbind();\n\t\tgfx.curShader.unbind();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tgfx.iqueue = [];\n\t\tgfx.vqueue = [];\n\n\t\tgfx.drawCalls++;\n\n\t}\n\n\tfunction frameStart() {\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\tif (!gopt.background) {\n\t\t\tdrawUVQuad({\n\t\t\t\twidth: width(),\n\t\t\t\theight: height(),\n\t\t\t\tquad: quad(\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\twidth() * scale() / BG_GRID_SIZE,\n\t\t\t\t\theight() * scale() / BG_GRID_SIZE,\n\t\t\t\t),\n\t\t\t\ttex: gfx.bgTex,\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0;\n\t\tgfx.transformStack = [];\n\t\tgfx.transform = mat4();\n\n\t}\n\n\tfunction frameEnd() {\n\t\tflush();\n\t\tgfx.lastDrawCalls = gfx.drawCalls;\n\t}\n\n\tfunction drawCalls() {\n\t\treturn gfx.lastDrawCalls;\n\t}\n\n\tfunction toNDC(pt: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t);\n\t}\n\n\tfunction applyMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone();\n\t}\n\n\tfunction pushTranslate(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 0 && p.y === 0) return;\n\t\tgfx.transform = gfx.transform.translate(p);\n\t}\n\n\tfunction pushScale(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 1 && p.y === 1) return;\n\t\tgfx.transform = gfx.transform.scale(p);\n\t}\n\n\tfunction pushRotateX(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateX(a);\n\t}\n\n\tfunction pushRotateY(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateY(a);\n\t}\n\n\tfunction pushRotateZ(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateZ(a);\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone());\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop();\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\t\tconst q = opt.quad || quad(0, 0, 1, 1);\n\t\tconst color = opt.color || rgb(255, 255, 255);\n\t\tconst opacity = opt.opacity ?? 1;\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushRotateZ(opt.angle);\n\t\tpushScale(opt.scale);\n\t\tpushTranslate(offset);\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.tex, opt.shader, opt.uniform);\n\n\t\tpopTransform();\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(\n\t\topt: DrawTextureOpt,\n\t) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t\t}\n\n\t\tconst q = opt.quad ?? quad(0, 0, 1, 1);\n\t\tconst w = opt.tex.width * q.w;\n\t\tconst h = opt.tex.height * q.h;\n\t\tconst scale = vec2(1);\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w);\n\t\t\tconst repY = Math.ceil((opt.height || h) / h);\n\t\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad({\n\t\t\t\t\t\t...opt,\n\t\t\t\t\t\tpos: (opt.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = scale.x;\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t\tscale.x = scale.y;\n\t\t\t}\n\n\t\t\tdrawUVQuad({\n\t\t\t\t...opt,\n\t\t\t\t// @ts-ignore\n\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360);\n\t\tend = deg2rad(end % 360);\n\t\tif (end <= start) end += Math.PI * 2;\n\n\t\t// TODO: better way to get this?\n\t\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\t\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\t\tconst step = (end - start) / nverts;\n\t\tconst pts = [];\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t\t}\n\n\t\t// doing this on the side due to possible floating point inaccuracy\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\t\treturn pts;\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(1, 1);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\t\tlet pts = [\n\t\t\tvec2(0, 0),\n\t\t\tvec2(w, 0),\n\t\t\tvec2(w, h),\n\t\t\tvec2(0, h),\n\t\t];\n\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius);\n\n\t\t\tpts = [\n\t\t\t\tvec2(r, 0),\n\t\t\t\tvec2(w - r, 0),\n\t\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tvec2(w, r),\n\t\t\t\tvec2(w, h - r),\n\t\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tvec2(w - r, h),\n\t\t\t\tvec2(r, h),\n\t\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tvec2(0, h - r),\n\t\t\t\tvec2(0, r),\n\t\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t\t];\n\n\t\t}\n\n\t\tdrawPolygon({ ...opt, offset, pts });\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt;\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t\t}\n\n\t\tconst w = opt.width || 1;\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: vec3(p.x, p.y, 0),\n\t\t\tuv: vec2(0),\n\t\t\tcolor: opt.color ?? rgb(),\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}));\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], gfx.defTex, opt.shader, opt.uniform);\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts;\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t\t}\n\n\t\t\tconst radius = Math.min(opt.radius, minLen / 2);\n\n\t\t\tdrawLine({ ...opt, p1: pts[0], p2: pts[1], });\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i];\n\t\t\t\tconst p2 = pts[i + 1];\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdrawLine({ ...opt, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t\t}\n\t\treturn drawPolygon({\n\t\t\t...opt,\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t});\n\t}\n\n\t// TODO: origin\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (!opt.radius) {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawEllipse({\n\t\t\t...opt,\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t});\n\n\t}\n\n\t// TODO: use fan-like triangulation\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawPolygon({\n\t\t\t...opt,\n\t\t\tpts: getArcPts(\n\t\t\t\tvec2(0),\n\t\t\t\topt.radiusX,\n\t\t\t\topt.radiusY,\n\t\t\t\topt.start ?? 0,\n\t\t\t\topt.end ?? 360,\n\t\t\t\topt.resolution\n\t\t\t),\n\t\t\tradius: 0,\n\t\t});\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tconst npts = opt.pts.length;\n\n\t\tif (npts < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushScale(opt.scale);\n\t\tpushRotateZ(opt.angle);\n\t\tpushTranslate(opt.offset);\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? rgb();\n\n\t\t\tconst verts = opt.pts.map((pt) => ({\n\t\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\t\tuv: vec2(0, 0),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}));\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat();\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, gfx.defTex, opt.shader, opt.uniform);\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\t// format text and return a list of chars with their calculated position\n\tfunction fmtText(opt: DrawTextOpt2): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"fmtText() requires property \\\"text\\\".\");\n\t\t}\n\n\t\tconst font = opt.font;\n\t\tconst chars = (opt.text + \"\").split(\"\");\n\t\tconst gw = font.qw * font.tex.width;\n\t\tconst gh = font.qh * font.tex.height;\n\t\tconst size = opt.size || gh;\n\t\tconst scale = vec2(size / gh).scale(vec2(opt.scale || 1));\n\t\tconst cw = scale.x * gw;\n\t\tconst ch = scale.y * gh;\n\t\tlet curX = 0;\n\t\tlet th = ch;\n\t\tlet tw = 0;\n\t\tconst flines = [];\n\t\tlet curLine = [];\n\t\tlet lastSpace = null;\n\t\tlet cursor = 0;\n\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet char = chars[cursor];\n\n\t\t\t// check new line\n\t\t\tif (char === \"\\n\") {\n\t\t\t\t// always new line on '\\n'\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t} else if ((opt.width ? (curX + cw > opt.width) : false)) {\n\t\t\t\t// new line on last word if width exceeds\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\t\tchar = chars[cursor];\n\t\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t\t}\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t}\n\n\t\t\t// push char\n\t\t\tif (char !== \"\\n\") {\n\t\t\t\tcurLine.push(char);\n\t\t\t\tcurX += cw;\n\t\t\t\tif (char === \" \") {\n\t\t\t\t\tlastSpace = curLine.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttw = Math.max(tw, curX);\n\t\t\tcursor++;\n\n\t\t}\n\n\t\tflines.push(curLine);\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width;\n\t\t}\n\n\t\t// whole text offset\n\t\tconst fchars = [];\n\t\tconst pos = vec2(opt.pos || 0);\n\t\tconst offset = originPt(opt.origin || DEF_ORIGIN).scale(0.5);\n\t\t// this math is complicated i forgot how it works instantly\n\t\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\t\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\t\tlet idx = 0;\n\n\t\tflines.forEach((line, ln) => {\n\n\t\t\t// line offset\n\t\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\t\tline.forEach((char, cn) => {\n\t\t\t\tconst qpos = font.map[char];\n\t\t\t\tconst x = cn * cw;\n\t\t\t\tconst y = ln * ch;\n\t\t\t\tidx += 1;\n\t\t\t\tif (qpos) {\n\t\t\t\t\tconst fchar = {\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\tquad: quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\t\tch: char,\n\t\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\t\topacity: opt.opacity,\n\t\t\t\t\t\tcolor: opt.color ?? rgb(255, 255, 255),\n\t\t\t\t\t\torigin: opt.origin,\n\t\t\t\t\t\tscale: scale,\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.transform) {\n\t\t\t\t\t\tconst tr = opt.transform(idx, char) ?? {};\n\t\t\t\t\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n\t\t\t\t\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n\t\t\t\t\t\tif (tr.angle) fchar.angle += tr.angle;\n\t\t\t\t\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color);\n\t\t\t\t\t\tif (tr.opacity) fchar.opacity *= tr.opacity;\n\t\t\t\t\t}\n\t\t\t\t\tfchars.push(fchar);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t};\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt2) {\n\t\tdrawFmtText(fmtText(opt));\n\t}\n\n\t// TODO: rotation\n\tfunction drawFmtText(ftext: FormattedText) {\n\t\tfor (const ch of ftext.chars) {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\t// TODO: topleft\n\t\t\t\torigin: \"center\",\n\t\t\t});\n\t\t}\n\t}\n\n//  \twindow.addEventListener(\"resize\", updateSize);\n\n\tfunction updateSize() {\n\t\tif (gopt.width && gopt.height && gopt.stretch) {\n\t\t\tif (gopt.letterbox) {\n\t\t\t\t// TODO: not working\n\t\t\t\tconst r1 = gl.drawingBufferWidth / gl.drawingBufferHeight;\n\t\t\t\tconst r2 = gopt.width / gopt.height;\n\t\t\t\tif (r1 > r2) {\n\t\t\t\t\tgfx.width = gopt.height * r1;\n\t\t\t\t\tgfx.height = gopt.height;\n\t\t\t\t\tconst sw = gl.drawingBufferHeight * r2;\n\t\t\t\t\tconst sh = gl.drawingBufferHeight;\n\t\t\t\t\tconst x = (gl.drawingBufferWidth - sw) / 2;\n\t\t\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\t\t\tgl.viewport(x, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t} else {\n\t\t\t\t\tgfx.width = gopt.width;\n\t\t\t\t\tgfx.height = gopt.width / r1;\n\t\t\t\t\tconst sw = gl.drawingBufferWidth;\n\t\t\t\t\tconst sh = gl.drawingBufferWidth / r2;\n\t\t\t\t\tconst y = (gl.drawingBufferHeight - sh) / 2;\n\t\t\t\t\tgl.scissor(0, gl.drawingBufferHeight - sh - y, sw, sh);\n\t\t\t\t\tgl.viewport(0, -y, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgfx.width = gopt.width;\n\t\t\t\tgfx.height = gopt.height;\n\t\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t}\n\t\t} else {\n\t\t\tgfx.width = gl.drawingBufferWidth / scale();\n\t\t\tgfx.height = gl.drawingBufferHeight / scale();\n\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t}\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width;\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height;\n\t}\n\n\tfunction scale(): number {\n\t\treturn gopt.scale ?? 1;\n\t}\n\n\tfunction background(): Color {\n\t\treturn gfx.background.clone();\n\t}\n\n\tupdateSize();\n\tframeStart();\n\tframeEnd();\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tscale,\n\t\tmakeTex,\n\t\tmakeShader,\n\t\tmakeFont,\n\t\tdrawTexture,\n\t\tdrawText,\n\t\tdrawFmtText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawPolygon,\n\t\tdrawUVQuad,\n\t\tfmtText,\n\t\tframeStart,\n\t\tframeEnd,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotateX,\n\t\tpushRotateY,\n\t\tpushRotateZ,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tapplyMatrix,\n\t\tdrawCalls,\n\t\tbackground,\n\t};\n\n}\n\nexport {\n\tGfx,\n\toriginPt,\n\tgfxInit,\n};\n", "import {\n\tvec2,\n} from \"./math\";\n\nimport {\n\tKey,\n\tMouseButton,\n\tVec2,\n\tCursor,\n} from \"./types\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype AppOpt = {\n\twidth?: number,\n\theight?: number,\n\tstretch?: boolean,\n\tscale?: number,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n\ttouchToMouse?: boolean,\n\taudioCtx?: AudioContext,\n};\n\ntype AppCtx = {\n\tcanvas: HTMLCanvasElement,\n\tmousePos: Vec2,\n\tmouseDeltaPos: Vec2,\n\tmouseStates: Record<string, ButtonState>,\n\tkeyStates: Record<string, ButtonState>,\n\tcharInputted: string[],\n\tisMouseMoved: boolean,\n\ttime: number,\n\tdt: number,\n\trealTime: number,\n\tskipTime: boolean,\n\tscale: number,\n\tisTouch: boolean,\n\tloopID: number | null,\n\tstopped: boolean,\n\tfps: number,\n\tfpsBuf: number[],\n\tfpsTimer: number,\n\tisKeyPressed: boolean,\n\tisKeyPressedRepeat: boolean,\n};\n\ntype App = {\n\tgl: WebGLRenderingContext,\n\tmousePos(): Vec2,\n\tmouseDeltaPos(): Vec2,\n\tisKeyDown(k?: Key): boolean,\n\tisKeyPressed(k?: Key): boolean,\n\tisKeyPressedRepeat(k?: Key): boolean,\n\tisKeyReleased(k?: Key): boolean,\n\tisMouseDown(m?: MouseButton): boolean,\n\tisMousePressed(m?: MouseButton): boolean,\n\tisMouseReleased(m?: MouseButton): boolean,\n\tisMouseMoved(m?: MouseButton): boolean,\n\tcharInputted(): string[],\n\tcursor(c?: Cursor): Cursor,\n\tfullscreen(f?: boolean): void,\n\tisFullscreen(): boolean,\n\tdt(): number,\n\tfps(): number,\n\ttime(): number,\n\tscreenshot(): string,\n\trun(f: () => void),\n\tquit(),\n\tisFocused(): boolean,\n\tfocus(),\n\tcanvas: HTMLCanvasElement,\n\tisTouch: boolean,\n\tscale: number,\n};\n\nfunction processBtnState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\nfunction enterFullscreen(el: HTMLElement) {\n\tif (el.requestFullscreen) el.requestFullscreen();\n\t// @ts-ignore\n\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n};\n\nfunction exitFullscreen() {\n\tif (document.exitFullscreen) document.exitFullscreen();\n\t// @ts-ignore\n\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n};\n\nfunction getFullscreenElement(): Element | void {\n\treturn document.fullscreenElement\n\t\t// @ts-ignore\n\t\t|| document.webkitFullscreenElement\n\t\t;\n};\n\nfunction appInit(gopt: AppOpt = {}): App {\n\n    const root = gopt.root ?? document.body;\n\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\tconst app: AppCtx = {\n\t\tcanvas: gopt.canvas ?? (() => {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\troot.appendChild(canvas);\n\t\t\treturn canvas;\n\t\t})(),\n\t\tkeyStates: {},\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tisKeyPressed: false,\n\t\tisKeyPressedRepeat: false,\n\t\tmouseStates: {},\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tskipTime: false,\n\t\tdt: 0.0,\n\t\tscale: gopt.scale ?? 1,\n\t\tisTouch: false,\n\t\tloopID: null,\n\t\tstopped: false,\n\t\tfps: 0,\n\t\tfpsBuf: [],\n\t\tfpsTimer: 0,\n\t};\n\n\tconst keyMap = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t};\n\n\tconst preventDefaultKeys = [\n\t\t\"space\",\n\t\t\"left\",\n\t\t\"right\",\n\t\t\"up\",\n\t\t\"down\",\n\t\t\"tab\",\n\t\t\"f1\",\n\t\t\"f2\",\n\t\t\"f3\",\n\t\t\"f4\",\n\t\t\"f5\",\n\t\t\"f6\",\n\t\t\"f7\",\n\t\t\"f8\",\n\t\t\"f9\",\n\t\t\"f10\",\n\t\t\"f11\",\n\t\t\"s\",\n\t];\n\n\tif (gopt.width && gopt.height && !gopt.stretch) {\n\t\tapp.canvas.width = gopt.width * app.scale;\n\t\tapp.canvas.height = gopt.height * app.scale;\n\t} else {\n\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n\t}\n\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gopt.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// @ts-ignore\n\tapp.canvas.style = styles.join(\";\");\n\tapp.canvas.setAttribute(\"tabindex\", \"0\");\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\tapp.isTouch = (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0;\n\n\tapp.canvas.addEventListener(\"mousemove\", (e) => {\n\t\tif (isFullscreen()) {\n\t\t\t// in fullscreen mode browser adds letter box to preserve original canvas aspect ratio, but won't give us the transformed mouse position\n\t\t\t// TODO\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t} else {\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t}\n\t\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\t// according to https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\tconst mouseButtons = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t];\n\n\tapp.canvas.addEventListener(\"mousedown\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"pressed\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"mouseup\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"released\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"keydown\", (e) => {\n\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\n\t\tif (preventDefaultKeys.includes(k)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (k.length === 1) {\n\t\t\tapp.charInputted.push(e.key);\n\t\t}\n\n\t\tif (k === \"space\") {\n\t\t\tapp.charInputted.push(\" \");\n\t\t}\n\n\t\tif (e.repeat) {\n\t\t\tapp.isKeyPressedRepeat = true;\n\t\t\tapp.keyStates[k] = \"rpressed\";\n\t\t} else {\n\t\t\tapp.isKeyPressed = true;\n\t\t\tapp.keyStates[k] = \"pressed\";\n\t\t}\n\n\t});\n\n\tapp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\t\tapp.keyStates[k] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchstart\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable long tap context menu\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseStates[\"left\"] = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchmove\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable scrolling\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\tapp.canvas.addEventListener(\"touchend\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchcancel\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"contextmenu\", function (e) {\n\t\te.preventDefault();\n\t});\n\n\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\tswitch (document.visibilityState) {\n\t\t\tcase \"visible\":\n\t\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\t\tapp.skipTime = true;\n\t\t\t\t// TODO: don't resume if debug.paused\n\t\t\t\tgopt.audioCtx?.resume();\n\t\t\t\tbreak;\n\t\t\tcase \"hidden\":\n\t\t\t\tgopt.audioCtx?.suspend();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// TODO: not quite working\n//  \twindow.addEventListener(\"resize\", () => {\n//  \t\tif (!(gopt.width && gopt.height && !gopt.stretch)) {\n//  \t\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n//  \t\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n//  \t\t}\n//  \t});\n\n\tfunction mousePos(): Vec2 {\n\t\treturn app.mousePos.clone();\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn app.mouseDeltaPos.clone();\n\t}\n\n\tfunction isMousePressed(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\";\n\t}\n\n\tfunction isMouseDown(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\" || app.mouseStates[m] === \"down\";\n\t}\n\n\tfunction isMouseReleased(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"released\";\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn app.isMouseMoved;\n\t}\n\n\tfunction isKeyPressed(k?: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressed;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\";\n\t\t}\n\t}\n\n\tfunction isKeyPressedRepeat(k: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressedRepeat;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t\t}\n\t}\n\n\tfunction isKeyDown(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\"\n\t\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t\t|| app.keyStates[k] === \"down\";\n\t}\n\n\tfunction isKeyReleased(k: string): boolean {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...app.charInputted];\n\t}\n\n\t// get delta time between last frame\n\tfunction dt(): number {\n\t\treturn app.dt;\n\t}\n\n\t// get current running time\n\tfunction time(): number {\n\t\treturn app.time;\n\t}\n\n\tfunction fps(): number {\n\t\treturn app.fps;\n\t}\n\n\t// get a base64 png image of canvas\n\tfunction screenshot(): string {\n\t\treturn app.canvas.toDataURL();\n\t}\n\n\t// TODO: custom cursor\n\tfunction cursor(c?: Cursor): Cursor {\n\t\tif (c) {\n\t\t\tapp.canvas.style.cursor = c;\n\t\t}\n\t\treturn app.canvas.style.cursor;\n\t}\n\n\tfunction fullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(app.canvas);\n\t\t} else {\n\t\t\texitFullscreen();\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement());\n\t}\n\n\tfunction run(f: () => void) {\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (document.visibilityState !== \"visible\") {\n\t\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst realTime = t / 1000;\n\t\t\tconst realDt = realTime - app.realTime;\n\n\t\t\tapp.realTime = realTime;\n\n\t\t\tif (!app.skipTime) {\n\t\t\t\tapp.dt = realDt;\n\t\t\t\tapp.time += app.dt;\n\t\t\t\tapp.fpsBuf.push(1 / app.dt);\n\t\t\t\tapp.fpsTimer += app.dt;\n\t\t\t\tif (app.fpsTimer >= 1) {\n\t\t\t\t\tapp.fpsTimer = 0;\n\t\t\t\t\tapp.fps = Math.round(app.fpsBuf.reduce((a, b) => a + b) / app.fpsBuf.length);\n\t\t\t\t\tapp.fpsBuf = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapp.skipTime = false;\n\n\t\t\tf();\n\n\t\t\tfor (const k in app.keyStates) {\n\t\t\t\tapp.keyStates[k] = processBtnState(app.keyStates[k]);\n\t\t\t}\n\n\t\t\tfor (const m in app.mouseStates) {\n\t\t\t\tapp.mouseStates[m] = processBtnState(app.mouseStates[m]);\n\t\t\t}\n\n\t\t\tapp.charInputted = [];\n\t\t\tapp.isMouseMoved = false;\n\t\t\tapp.isKeyPressed = false;\n\t\t\tapp.isKeyPressedRepeat = false;\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t\t};\n\n\t\tapp.stopped = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t}\n\n\tfunction quit() {\n\t\tcancelAnimationFrame(app.loopID);\n\t\tapp.stopped = true;\n\t}\n\n\treturn {\n\t\tgl,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tcharInputted,\n\t\tcursor,\n\t\tdt,\n\t\ttime,\n\t\tfps,\n\t\tscreenshot,\n\t\trun,\n\t\tquit,\n\t\tisFocused: () => document.activeElement === app.canvas,\n\t\tfocus: () => app.canvas.focus(),\n\t\tcanvas: app.canvas,\n\t\tisTouch: app.isTouch,\n\t\tscale: app.scale,\n\t\tfullscreen,\n\t\tisFullscreen,\n\t};\n\n}\n\nexport {\n\tApp,\n\tappInit,\n};\n", "// TODO: onend event\n\nimport {\n\tclamp,\n} from \"./math\";\n\nimport {\n\tSoundData,\n\tAudioPlay,\n\tAudioPlayOpt,\n} from \"./types\";\n\ntype Audio = {\n\tctx: AudioContext,\n\tmasterNode: GainNode,\n\tvolume(v: number): number,\n\tplay(snd: SoundData, opt?: AudioPlayOpt): AudioPlay,\n\tburp(opt?: AudioPlayOpt): AudioPlay,\n};\n\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\n// @ts-ignore\nimport burpBytes from \"./burp.mp3\";\n\nfunction audioInit(): Audio {\n\t// TODO handle audio unavailable\n\tconst ctx = new (window.AudioContext || (window as any).webkitAudioContext)() as AudioContext\n\tconst masterNode = ctx.createGain();\n\tmasterNode.connect(ctx.destination);\n\n\n\tconst burpSnd = {\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t};\n\n\tctx.decodeAudioData(burpBytes.buffer.slice(0), (buf) => {\n\t\tburpSnd.buf = buf;\n\t}, () => {\n\t\tthrow new Error(\"failed to make burp\")\n\t});\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\tmasterNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t\t}\n\t\treturn masterNode.gain.value;\n\t}\n\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsnd: SoundData,\n\t\topt: AudioPlayOpt = {\n\t\t\tloop: false,\n\t\t\tvolume: 1,\n\t\t\tspeed: 1,\n\t\t\tdetune: 0,\n\t\t\tseek: 0,\n\t\t},\n\t): AudioPlay {\n\n\t\tlet stopped = false;\n\t\tlet srcNode = ctx.createBufferSource();\n\n\t\tsrcNode.buffer = snd.buf;\n\t\tsrcNode.loop = opt.loop ? true : false;\n\n\t\tconst gainNode = ctx.createGain();\n\n\t\tsrcNode.connect(gainNode);\n\t\tgainNode.connect(masterNode);\n\n\t\tconst pos = opt.seek ?? 0;\n\n\t\tsrcNode.start(0, pos);\n\n\t\tlet startTime = ctx.currentTime - pos;\n\t\tlet stopTime: number | null = null;\n\n\t\tconst handle = {\n\n\t\t\tstop() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.pause();\n\t\t\t\tstartTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tplay(seek?: number) {\n\n\t\t\t\tif (!stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldNode = srcNode;\n\n\t\t\t\tsrcNode = ctx.createBufferSource();\n\t\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\t\tif (srcNode.detune) {\n\t\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t\t}\n\n\t\t\t\tsrcNode.connect(gainNode);\n\n\t\t\t\tconst pos = seek ?? this.time();\n\n\t\t\t\tsrcNode.start(0, pos);\n\t\t\t\tstartTime = ctx.currentTime - pos;\n\t\t\t\tstopped = false;\n\t\t\t\tstopTime = null;\n\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsrcNode.stop();\n\t\t\t\tstopped = true;\n\t\t\t\tstopTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tisPaused(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tpaused(): boolean {\n\t\t\t\treturn this.isPaused();\n\t\t\t},\n\n\t\t\tisStopped(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tstopped(): boolean {\n\t\t\t\treturn this.isStopped();\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tspeed(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t\t}\n\t\t\t\treturn srcNode.playbackRate.value;\n\t\t\t},\n\n\t\t\tdetune(val?: number): number {\n\t\t\t\tif (!srcNode.detune) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t\t}\n\t\t\t\treturn srcNode.detune.value;\n\t\t\t},\n\n\t\t\tvolume(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t\t}\n\t\t\t\treturn gainNode.gain.value;\n\t\t\t},\n\n\t\t\tloop() {\n\t\t\t\tsrcNode.loop = true;\n\t\t\t},\n\n\t\t\tunloop() {\n\t\t\t\tsrcNode.loop = false;\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn snd.buf.duration;\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn stopTime - startTime;\n\t\t\t\t} else {\n\t\t\t\t\treturn ctx.currentTime - startTime;\n\t\t\t\t}\n\t\t\t},\n\n\t\t};\n\n\t\thandle.speed(opt.speed);\n\t\thandle.detune(opt.detune);\n\t\thandle.volume(opt.volume);\n\n\t\treturn handle;\n\n\t}\n\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(burpSnd, opt);\n\t}\n\n\treturn {\n\t\tctx,\n\t\tmasterNode,\n\t\tvolume,\n\t\tplay,\n\t\tburp,\n\t};\n\n}\n\nexport {\n\tAudio,\n\taudioInit,\n};\n", "import {\n\tquad,\n} from \"./math\";\n\nimport {\n\tAudio,\n} from \"./audio\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\nimport {\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tSpriteLoadSrc,\n\tSpriteLoadOpt,\n\tSpriteAtlasData,\n\tFontLoadOpt,\n\tQuad,\n\tGfxTexData,\n} from \"./types\";\n\n// @ts-ignore\nimport apl386Src from \"./apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./bean.png\";\n\ntype AssetsOpt = {\n\terrHandler?: (err: string) => void,\n};\n\ntype LoaderID = number;\n\ntype AssetsCtx = {\n\tlastLoaderID: LoaderID,\n\tloadRoot: string,\n\t// TODO: just use a counter?\n\tloaders: Record<number, boolean>,\n\t// TODO: allow Promise<SoundData>?\n\tsprites: Record<string, SpriteData>,\n\tsounds: Record<string, SoundData>,\n\tfonts: Record<string, FontData>,\n\tshaders: Record<string, ShaderData>,\n};\n\ntype Assets = {\n\tloadRoot(path?: string): string,\n\tloadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt?: SpriteLoadOpt,\n\t): Promise<SpriteData>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData,\n\t): Promise<Record<string, SpriteData>>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\turl: string,\n\t): Promise<Record<string, SpriteData>>,\n\tloadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData>,\n\tloadPedit(name: string | null, src: string): Promise<SpriteData>,\n\tloadBean(name?: string): Promise<SpriteData>,\n\tloadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData>,\n\tloadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt?: FontLoadOpt,\n\t): Promise<FontData>,\n\tloadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl?: boolean,\n\t): Promise<ShaderData>,\n\tloadProgress(): number,\n\tload<T>(prom: Promise<T>),\n\tsprites: Record<string, SpriteData>,\n\tfonts: Record<string, FontData>,\n\tsounds: Record<string, SoundData>,\n\tshaders: Record<string, ShaderData>,\n};\n\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS = \" \u263A\u263B\u2665\u2666\u2663\u2660\u2022\u25D8\u25CB\u25D9\u2642\u2640\u266A\u266B\u263C\u25BA\u25C4\u2195\u203C\u00B6\u00A7\u25AC\u21A8\u2191\u2193\u2192\u2190\u221F\u2194\u25B2\u25BC !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\";\n\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => {\n\t\t\tresolve(img);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\treject(`failed to load ${src}`);\n\t\t};\n\t});\n}\n\nfunction isDataUrl(src: string): boolean {\n\treturn src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx: Gfx, audio: Audio, gopt: AssetsOpt = {}): Assets {\n\n\tconst assets: AssetsCtx = {\n\t\tlastLoaderID: 0,\n\t\tloadRoot: \"\",\n\t\tloaders: {},\n\t\tsprites: {},\n\t\tsounds: {},\n\t\tfonts: {},\n\t\tshaders: {},\n\t};\n\n\tfunction load<T>(prom: Promise<T>): Promise<T> {\n\t\tconst id = assets.lastLoaderID;\n\t\tassets.loaders[id] = false;\n\t\tassets.lastLoaderID++;\n\t\treturn prom\n\t\t\t.catch(gopt.errHandler ?? console.error)\n\t\t\t.finally(() => assets.loaders[id] = true) as Promise<T>;\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\n\t\tlet total = 0;\n\t\tlet loaded = 0;\n\n\t\tfor (const id in assets.loaders) {\n\t\t\ttotal += 1;\n\t\t\tif (assets.loaders[id]) {\n\t\t\t\tloaded += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn loaded / total;\n\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.loadRoot = path;\n\t\t}\n\t\treturn assets.loadRoot;\n\t}\n\n\t// TODO: support SpriteLoadSrc\n\tfunction loadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: FontLoadOpt = {},\n\t): Promise<FontData> {\n\t\treturn load(new Promise<FontData>((resolve, reject) => {\n\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\tloadImg(path)\n\t\t\t\t.then((img) => {\n\t\t\t\t\tconst font = gfx.makeFont(gfx.makeTex(img, opt), gw, gh, opt.chars ?? ASCII_CHARS);\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tassets.fonts[name] = font;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(font);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t}));\n\t}\n\n\tfunction getSprite(name: string): SpriteData | null {\n\t\treturn assets.sprites[name] ?? null;\n\t}\n\n\tfunction getSound(name: string): SoundData | null {\n\t\treturn assets.sounds[name] ?? null;\n\t}\n\n\tfunction getFont(name: string): FontData | null {\n\t\treturn assets.fonts[name] ?? null;\n\t}\n\n\tfunction getShader(name: string): ShaderData | null {\n\t\treturn assets.shaders[name] ?? null;\n\t}\n\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = [];\n\t\tconst qw = w / x;\n\t\tconst qh = h / y;\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t\treturn frames;\n\t}\n\n\tfunction loadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData | string\n\t): Promise<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\t// TODO: this adds a new loader asyncly\n\t\t\treturn load(fetch(loadRoot() + data)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data2) => loadSpriteAtlas(src, data2)));\n\t\t}\n\t\treturn load(loadSprite(null, src).then((atlas) => {\n\t\t\tconst map = {};\n\t\t\tconst w = atlas.tex.width;\n\t\t\tconst h = atlas.tex.height;\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name];\n\t\t\t\tconst spr = {\n\t\t\t\t\ttex: atlas.tex,\n\t\t\t\t\tframes: slice(info.sliceX, info.sliceY, info.x / w, info.y / h, info.width / w, info.height / h),\n\t\t\t\t\tanims: info.anims,\n\t\t\t\t}\n\t\t\t\tassets.sprites[name] = spr;\n\t\t\t\tmap[name] = spr;\n\t\t\t}\n\t\t\treturn map;\n\t\t}));\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt: SpriteLoadOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Promise<SpriteData> {\n\n\t\t// synchronously load sprite from local pixel data\n\t\tfunction loadRawSprite(\n\t\t\tname: string | null,\n\t\t\tsrc: GfxTexData,\n\t\t\topt: SpriteLoadOpt = {\n\t\t\t\tsliceX: 1,\n\t\t\t\tsliceY: 1,\n\t\t\t\tanims: {},\n\t\t\t},\n\t\t) {\n\n\t\t\tconst tex = gfx.makeTex(src, opt);\n\t\t\tconst frames = slice(opt.sliceX || 1, opt.sliceY || 1);\n\n\t\t\tconst sprite = {\n\t\t\t\ttex: tex,\n\t\t\t\tframes: frames,\n\t\t\t\tanims: opt.anims || {},\n\t\t\t};\n\n\t\t\tif (name) {\n\t\t\t\tassets.sprites[name] = sprite;\n\t\t\t}\n\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sprite src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\t\tloadImg(path)\n\t\t\t\t\t.then((img) => resolve(loadRawSprite(name, img, opt)))\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\tresolve(loadRawSprite(name, src, opt));\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadPedit(name: string, src: string): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tfetch(loadRoot() + src)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then(async (data) => {\n\n\t\t\t\t\tconst images = await Promise.all(data.frames.map(loadImg));\n\t\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\t\tcanvas.width = data.width;\n\t\t\t\t\tcanvas.height = data.height * data.frames.length;\n\n\t\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\t\t\tctx.drawImage(img, 0, i * data.height);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn loadSprite(name, canvas, {\n\t\t\t\t\t\tsliceY: data.frames.length,\n\t\t\t\t\t\tanims: data.anims,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t\t;\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tconst jsonPath = loadRoot() + jsonSrc;\n\n\t\t\tloadSprite(name, imgSrc)\n\t\t\t\t.then((sprite: SpriteData) => {\n\t\t\t\t\tfetch(jsonPath)\n\t\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tconst size = data.meta.size;\n\t\t\t\t\t\t\tsprite.frames = data.frames.map((f: any) => {\n\t\t\t\t\t\t\t\treturn quad(\n\t\t\t\t\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\t\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = anim.from\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = {\n\t\t\t\t\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\t\t\t\t\t// TODO: let users define these\n\t\t\t\t\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(sprite);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t\t;\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\n\t\t}));\n\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl: boolean = false,\n\t): Promise<ShaderData> {\n\n\t\tfunction loadRawShader(\n\t\t\tname: string | null,\n\t\t\tvert: string | null,\n\t\t\tfrag: string | null,\n\t\t): ShaderData {\n\t\t\tconst shader = gfx.makeShader(vert, frag);\n\t\t\tif (name) {\n\t\t\t\tassets.shaders[name] = shader;\n\t\t\t}\n\t\t\treturn shader;\n\t\t}\n\n\t\treturn load(new Promise<ShaderData>((resolve, reject) => {\n\n\t\t\tif (!vert && !frag) {\n\t\t\t\treturn reject(\"no shader\");\n\t\t\t}\n\n\t\t\tfunction resolveUrl(url?: string) {\n\t\t\t\treturn url ?\n\t\t\t\t\tfetch(assets.loadRoot + url)\n\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\tif (r.ok) {\n\t\t\t\t\t\t\t\treturn r.text();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t: new Promise((r) => r(null));\n\t\t\t}\n\n\t\t\tif (isUrl) {\n\t\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept dataurl\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData> {\n\n\t\tconst url = assets.loadRoot + src;\n\n\t\treturn load(new Promise<SoundData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tfetch(url)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\treturn res.arrayBuffer();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\treturn new Promise((resolve2, reject2) => {\n\t\t\t\t\t\t\taudio.ctx.decodeAudioData(data, resolve2, reject2);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\t\tconst snd = {\n\t\t\t\t\t\t\tbuf: buf,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tassets.sounds[name] = snd;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(snd);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Promise<SpriteData> {\n\t\treturn loadSprite(name, beanSrc);\n\t}\n\n\tloadFont(\n\t\t\"apl386\",\n\t\tapl386Src,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"apl386o\",\n\t\tapl386oSrc,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"sink\",\n\t\tsinkSrc,\n\t\t6,\n\t\t8,\n\t\t{\n\t\t\tchars: `\u2588\u263A\u263B\u2665\u2666\u2663\u2660\u25CF\u25CB\u25AA\u25A1\u25A0\u25D8\u266A\u266B\u2261\u25BA\u25C4\u2302\u00DE\u00C0\u00DF\u00D7\u00A5\u2191\u2193\u2192\u2190\u25CC\u25CF\u25BC\u25B2 !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~\u03A7\u2591\u2592\u2593\u1E00\u1E01\u1E02\u2502\u252C\u2524\u250C\u2510\u1E03\u1E04\u253C\u1E05\u1E06\u1E07\u1E08\u1E09\u1E0A\u1E0B\u1E0C\u2500\u251C\u2534\u2514\u2518\u1E0D\u1E0E\u205E\u1E0F\u1E10\u1E11\u1E12\u1E13\u1E14\u1E15\u1E16\u1E17\u1E18\u2584\u1E19\u1E1A\u1E1B\u1E1C\u2026\u1E1D\u1E1E\u1E1F\u1E20\u1E21\u1E22\u1E23\u1E24\u1E25\u1E26\u258C\u2590\u1E27\u1E28\u1E29\u1E2A\u1E2B\u1E2C\u1E2D\u1E2E\u1E2F\u1E30\u1E31\u1E32\u1E33\u1E34\u1E35\u1E36\u1E37\u1E38\u1E39\u1E3A\u1E3B\u1E3C\u1E3D\u1E3E\u1E3F\u1E40\u1E41\u1E42\u1E43\u1E44\u1E45\u1E46\u1E47\u1E48\u1E49\u1E4A\u1E4B\u1E4C\u1E4D\u1E4E\u1E4F\u1E50\u1E51\u1E52\u1E53\u1E54\u1E55\u1E56\u1E57\u1E58\u1E59\u1E5A\u1E5B\u1E5C\u1E5D\u1E5E\u1E5F\u1E60\u1E61\u1E62\u1E63\u1E64\u1E65\u1E66\u1E67\u1E68\u1E69\u1E6A\u1E6B\u1E6C\u1E6D\u1E6E\u1E6F\u1E70\u1E71\u1E72\u1E73\u1E74\u1E75\u1E76\u1E77\u1E78\u1E79\u1E7A\u1E7B\u1E7C`,\n\t\t}\n\t);\n\n\tloadFont(\n\t\t\"sinko\",\n\t\tsinkoSrc,\n\t\t8,\n\t\t10,\n\t);\n\n\treturn {\n\t\tloadRoot,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadPedit,\n\t\tloadAseprite,\n\t\tloadBean,\n\t\tloadSound,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadProgress,\n\t\tload,\n\t\tsprites: assets.sprites,\n\t\tfonts: assets.fonts,\n\t\tsounds: assets.sounds,\n\t\tshaders: assets.shaders,\n\t};\n\n}\n\nexport {\n\tAssetsOpt,\n\tAssets,\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n};\n", "import {\n\tvec2,\n\trgb,\n\tmap,\n} from \"./math\";\n\nimport {\n\tAssets,\n} from \"./assets\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\ntype Log = {\n\ttype: \"info\" | \"error\",\n\tmsg: string,\n};\n\ntype LoggerOpt = {\n\tmax?: number,\n\ttime?: () => number,\n};\n\ntype Logger = {\n\tdraw(),\n\tinfo(msg: string),\n\terror(msg: string),\n\tclear(),\n};\n\nconst LOG_SIZE = 16;\n\nfunction loggerInit(gfx: Gfx, assets: Assets, opt: LoggerOpt = {}): Logger {\n\n\tlet logs: Log[] = [];\n\tconst max = opt.max ?? 1;\n\n\t// TODO: draw rects first to reduce draw calls\n\tfunction draw() {\n\n\t\tif (logs.length > max) {\n\t\t\tlogs = logs.slice(0, max);\n\t\t}\n\n\t\tconst pos = vec2(0, gfx.height());\n\n\t\tlogs.forEach((log, i) => {\n\n\t\t\tconst txtAlpha = map(i, 0, max, 1, 0.5);\n\t\t\tconst bgAlpha = map(i, 0, max, 0.8, 0.2);\n\n\t\t\tconst col = (() => {\n\t\t\t\tswitch (log.type) {\n\t\t\t\t\tcase \"info\": return rgb(255, 255, 255);\n\t\t\t\t\tcase \"error\": return rgb(255, 0, 127);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst ftext = gfx.fmtText({\n\t\t\t\ttext: log.msg,\n\t\t\t\tfont: assets.fonts[\"sink\"],\n\t\t\t\tpos: pos,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: col,\n\t\t\t\tsize: LOG_SIZE / gfx.scale(),\n\t\t\t\twidth: gfx.width(),\n\t\t\t\topacity: txtAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: pos,\n\t\t\t\twidth: ftext.width,\n\t\t\t\theight: ftext.height,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\topacity: bgAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftext);\n\t\t\tpos.y -= ftext.height;\n\n\t\t});\n\n\t}\n\n\tfunction error(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"error\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction info(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"info\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction clear() {\n\t\tlogs = [];\n\t}\n\n\treturn {\n\t\tinfo,\n\t\terror,\n\t\tdraw,\n\t\tclear,\n\t};\n\n}\n\nexport {\n\tloggerInit,\n};\n", "// explosion\n\nimport {\n\tCompList,\n\tVec2,\n\tComp,\n\tKaboomCtx,\n} from \"../types\";\n\n// @ts-ignore\nimport kaSrc from \"./ka.png\";\n// @ts-ignore\nimport boomSrc from \"./boom.png\";\n\ninterface BoomOpt {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\ninterface Kaboom {\n\t/**\n\t * Remove kaboom.\n\t */\n\tdestroy(): void,\n}\n\ninterface ExplodeComp extends Comp {\n}\n\ninterface KaboomPlug {\n\taddKaboom(pos: Vec2, opt?: BoomOpt): Kaboom,\n}\n\nexport default (k: KaboomCtx) => {\n\n\tfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\t\tlet time = 0;\n\t\treturn {\n\t\t\tid: \"explode\",\n\t\t\trequire: [ \"scale\", ],\n\t\t\tupdate() {\n\t\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tk.destroy(this);\n\t\t\t\t}\n\t\t\t\tthis.scale = k.vec2(s);\n\t\t\t\ttime += k.dt();\n\t\t\t},\n\t\t};\n\t}\n\n\tlet kaSprite = null;\n\tlet boomSprite = null;\n\n\tk.loadSprite(null, kaSrc).then((spr) => kaSprite = spr);\n\tk.loadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n\tfunction addKaboom(pos: Vec2, opt: BoomOpt = {}): Kaboom {\n\n\t\tconst speed = (opt.speed || 1) * 5;\n\t\tconst scale = opt.scale || 1;\n\n\t\tconst boom = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(boomSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\texplode(speed, scale),\n\t\t\t...(opt.boomComps ?? (() => []))(),\n\t\t]);\n\n\t\tconst ka = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(kaSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\tk.timer(0.4 / speed, () => ka.use(explode(speed, scale))),\n\t\t\t...(opt.kaComps ?? (() => []))(),\n\t\t]);\n\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tk.destroy(ka);\n\t\t\t\tk.destroy(boom);\n\t\t\t},\n\t\t};\n\n\t}\n\n\treturn {\n\t\taddKaboom,\n\t};\n\n};\n", "import {\n\tvec2,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tdeg2rad,\n\trad2deg,\n\tisVec2,\n} from \"./math\";\n\nimport {\n\toriginPt,\n\tgfxInit,\n} from \"./gfx\";\n\nimport {\n\tappInit,\n} from \"./app\";\n\nimport {\n\taudioInit,\n} from \"./audio\";\n\nimport {\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n} from \"./assets\";\n\nimport {\n\tloggerInit,\n} from \"./logger\";\n\nimport {\n\tIDList,\n\tdownloadURL,\n\tdownloadBlob,\n} from \"./utils\";\n\nimport {\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tVec2,\n\tMat4,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tGameObj,\n\tTimer,\n\tEventCanceller,\n\tSceneID,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tTouchID,\n\tCollision,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tOrigin,\n\tOriginComp,\n\tLayerComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tCleanupComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tArea,\n\tSpriteData,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tGfxTexture,\n\tQuad,\n\tSpriteAnimPlayOpt,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tColor,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tSolidComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevel,\n\tLevelOpt,\n\tCursor,\n\tRecording,\n} from \"./types\";\n\nimport kaboomPlugin from \"./plugins/kaboom\";\n\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\nconst audio = audioInit();\n\nconst app = appInit({\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\tcrisp: gopt.crisp,\n\tcanvas: gopt.canvas,\n\troot: gopt.root,\n\tstretch: gopt.stretch,\n\ttouchToMouse: gopt.touchToMouse ?? true,\n\taudioCtx: audio.ctx,\n});\n\nconst gfx = gfxInit(app.gl, {\n\tbackground: gopt.background ? rgb(gopt.background) : undefined,\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\ttexFilter: gopt.texFilter,\n\tstretch: gopt.stretch,\n\tletterbox: gopt.letterbox,\n});\n\nconst {\n\twidth,\n\theight,\n} = gfx;\n\nconst assets = assetsInit(gfx, audio, {\n\terrHandler: (err: string) => {\n\t\tlogger.error(err);\n\t},\n});\n\nconst logger = loggerInit(gfx, assets, {\n\tmax: gopt.logMax,\n});\n\nconst DEF_FONT = \"apl386o\";\nconst DBG_FONT = \"sink\";\n\nfunction dt() {\n\treturn app.dt() * debug.timeScale;\n}\n\n// TODO: clean\nfunction play(id: string, opt: AudioPlayOpt = {}): AudioPlay {\n\tconst pb = audio.play({\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t});\n\tonLoad(() => {\n\t\tconst snd = assets.sounds[id];\n\t\tif (!snd) {\n\t\t\tthrow new Error(`sound not found: \"${id}\"`);\n\t\t}\n\t\tconst pb2 = audio.play(snd, opt);\n\t\tfor (const k in pb2) {\n\t\t\tpb[k] = pb2[k];\n\t\t}\n\t});\n\treturn pb;\n}\n\nfunction mousePos(): Vec2 {\n\treturn app.mousePos();\n}\n\nfunction mouseWorldPos(): Vec2 {\n\treturn game.camMousePos;\n}\n\n// wrapper around gfx.drawTexture to integrate with sprite assets mananger / frame anim\nfunction drawSprite(opt: DrawSpriteOpt) {\n\tif (!opt.sprite) {\n\t\tthrow new Error(`drawSprite() requires property \"sprite\"`);\n\t}\n\tconst spr = (() => {\n\t\tif (typeof opt.sprite === \"string\") {\n\t\t\treturn assets.sprites[opt.sprite];\n\t\t} else {\n\t\t\treturn opt.sprite;\n\t\t}\n\t})();\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${opt.sprite}\"`);\n\t}\n\tconst q = spr.frames[opt.frame ?? 0];\n\tif (!q) {\n\t\tthrow new Error(`frame not found: ${opt.frame ?? 0}`);\n\t}\n\tgfx.drawTexture({\n\t\t...opt,\n\t\ttex: spr.tex,\n\t\tquad: q.scale(opt.quad || quad(0, 0, 1, 1)),\n\t});\n}\n\n// wrapper around gfx.drawText to integrate with font assets mananger / default font\nfunction drawText(opt: DrawTextOpt) {\n\t// @ts-ignore\n\tconst fid = opt.font ?? DEF_FONT;\n\tconst font = assets.fonts[fid];\n\tif (!font) {\n\t\tthrow new Error(`font not found: ${fid}`);\n\t}\n\tgfx.drawText({\n\t\t...opt,\n\t\tfont: font,\n\t});\n}\n\nconst DEF_GRAVITY = 1600;\nconst DEF_ORIGIN = \"topleft\";\n\ninterface Game {\n\tloaded: boolean,\n\tevents: Record<string, IDList<() => void>>,\n\tobjEvents: Record<string, IDList<TaggedEvent>>,\n\tobjs: IDList<GameObj>,\n\ttimers: IDList<Timer>,\n\tcam: Camera,\n\tcamMousePos: Vec2,\n\tcamMatrix: Mat4,\n\tgravity: number,\n\tlayers: Record<string, number>,\n\tdefLayer: string | null,\n\ton<F>(ev: string, cb: F): EventCanceller,\n\ttrigger(ev: string, ...args),\n\tscenes: Record<SceneID, SceneDef>,\n\tpaused: boolean,\n};\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n};\n\ntype Layer = {\n\torder: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyEvent = {\n\tkey: string,\n\tcb(),\n};\n\ntype MouseInputEvent = {\n\tcb(),\n};\n\ntype LoadEvent = () => void;\ntype NextFrameEvent = () => void;\ntype MouseEvent = () => void;\ntype CharEvent = (ch: string) => void;\n\nconst game: Game = {\n\n\tloaded: false,\n\n\t// event callbacks\n\tevents: {},\n\tobjEvents: {},\n\n\t// in game pool\n\tobjs: new IDList(),\n\ttimers: new IDList(),\n\n\t// cam\n\tcam: {\n\t\tpos: center(),\n\t\tscale: vec2(1),\n\t\tangle: 0,\n\t\tshake: 0,\n\t},\n\n\tcamMousePos: app.mousePos(),\n\tcamMatrix: mat4(),\n\n\t// misc\n\tlayers: {},\n\tdefLayer: null,\n\tgravity: DEF_GRAVITY,\n\n\ton<F>(ev: string, cb: F): EventCanceller {\n\t\tif (!this.events[ev]) {\n\t\t\tthis.events[ev] = new IDList();\n\t\t}\n\t\treturn this.events[ev].pushd(cb);\n\t},\n\n\ttrigger(ev: string, ...args) {\n\t\tif (this.events[ev]) {\n\t\t\tthis.events[ev].forEach((cb) => cb(...args));\n\t\t}\n\t},\n\n\tscenes: {},\n\tpaused: false,\n\n};\n\nfunction layers(list: string[], def?: string) {\n\n\tlist.forEach((name, idx) => {\n\t\tgame.layers[name] = idx + 1;\n\t});\n\n\tif (def) {\n\t\tgame.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tif (pos.length > 0) {\n\t\tgame.cam.pos = vec2(...pos);\n\t}\n\treturn game.cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tif (scale.length > 0) {\n\t\tgame.cam.scale = vec2(...scale);\n\t}\n\treturn game.cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tif (angle !== undefined) {\n\t\tgame.cam.angle = angle;\n\t}\n\treturn game.cam.angle;\n}\n\nfunction shake(intensity: number = 12) {\n\tgame.cam.shake = intensity;\n}\n\nfunction toScreen(p: Vec2): Vec2 {\n\treturn game.camMatrix.multVec2(p);\n}\n\nfunction toWorld(p: Vec2): Vec2 {\n\treturn game.camMatrix.invert().multVec2(p);\n}\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n]);\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"load\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n]);\n\nfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\tconst compStates = new Map();\n\tconst customState = {};\n\tconst events = {};\n\n\tconst obj = {\n\n\t\t_id: null,\n\t\thidden: false,\n\t\tpaused: false,\n\n\t\t// use a comp, or tag\n\t\tuse(comp: Comp | Tag) {\n\n\t\t\tif (!comp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// tag\n\t\t\tif (typeof comp === \"string\") {\n\t\t\t\treturn this.use({\n\t\t\t\t\tid: comp\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// clear if overwrite\n\t\t\tif (comp.id) {\n\t\t\t\tthis.unuse(comp.id);\n\t\t\t\tcompStates.set(comp.id, {});\n\t\t\t}\n\n\t\t\t// state source location\n\t\t\tconst state = comp.id ? compStates.get(comp.id) : customState;\n\n\t\t\tstate.cleanups = [];\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tconst func = comp[k].bind(this);\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\tstate.cleanups.push(this.on(k, func));\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate[k] = comp[k];\n\t\t\t\t}\n\n\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\tget: () => state[k],\n\t\t\t\t\t\tset: (val) => state[k] = val,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst checkDeps = () => {\n\t\t\t\tif (!comp.require) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\tthrow new Error(`comp '${comp.id}' requires comp '${dep}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// check deps or run add event\n\t\t\tif (this.exists()) {\n\t\t\t\tif (comp.add) {\n\t\t\t\t\tcomp.add.call(this);\n\t\t\t\t}\n\t\t\t\tif (comp.load) {\n\t\t\t\t\tonLoad(() => comp.load.call(this));\n\t\t\t\t}\n\t\t\t\tcheckDeps();\n\t\t\t} else {\n\t\t\t\tif (comp.require) {\n\t\t\t\t\tstate.cleanups.push(this.on(\"add\", () => {\n\t\t\t\t\t\tcheckDeps();\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tunuse(id: Tag) {\n\t\t\tif (compStates.has(id)) {\n\t\t\t\tconst comp = compStates.get(id);\n\t\t\t\tcomp.cleanups.forEach((f) => f());\n\t\t\t\tfor (const k in comp) {\n\t\t\t\t\tdelete comp[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompStates.delete(id);\n\t\t},\n\n\t\tc(id: Tag): Comp {\n\t\t\treturn compStates.get(id);\n\t\t},\n\n\t\texists(): boolean {\n\t\t\treturn this._id !== null;\n\t\t},\n\n\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.c(tag) != null;\n\t\t\t}\n\t\t},\n\n\t\ton(ev: string, cb): EventCanceller {\n\t\t\tif (!events[ev]) {\n\t\t\t\tevents[ev] = new IDList();\n\t\t\t}\n\t\t\treturn events[ev].pushd(cb);\n\t\t},\n\n\t\taction(...args): EventCanceller {\n\t\t\treturn this.onUpdate(...args);\n\t\t},\n\n\t\ttrigger(ev: string, ...args): void {\n\n\t\t\tif (events[ev]) {\n\t\t\t\tevents[ev].forEach((cb) => cb.call(this, ...args));\n\t\t\t}\n\n\t\t\tconst gEvents = game.objEvents[ev];\n\n\t\t\tif (gEvents) {\n\t\t\t\tgEvents.forEach((e) => {\n\t\t\t\t\tif (this.is(e.tag)) {\n\t\t\t\t\t\te.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy() {\n\n\t\t\tif (!this.exists()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.trigger(\"destroy\");\n\t\t\tgame.objs.delete(this._id);\n\t\t\tthis._id = null;\n\n\t\t},\n\n\t\tinspect() {\n\t\t\tconst info = {};\n\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t\tonUpdate(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"update\", cb);\n\t\t},\n\n\t\tonDraw(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"draw\", cb);\n\t\t},\n\n\t\tonDestroy(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"destroy\", action);\n\t\t},\n\n\t};\n\n\tfor (const comp of comps) {\n\t\tobj.use(comp);\n\t}\n\n\treturn obj as unknown as GameObj<T>;\n\n}\n\nfunction add<T>(comps: CompList<T>): GameObj<T> {\n\tconst obj = make(comps);\n\tobj._id = game.objs.push(obj);\n\tobj.trigger(\"add\");\n\tonLoad(() => obj.trigger(\"load\"));\n\treturn obj;\n}\n\nfunction readd(obj: GameObj): GameObj {\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\tgame.objs.delete(obj._id);\n\tobj._id = game.objs.push(obj);\n\treturn obj;\n}\n\n// add an event to a tag\nfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventCanceller {\n\tif (!game.objEvents[event]) {\n\t\tgame.objEvents[event] = new IDList();\n\t}\n\treturn game.objEvents[event].pushd({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// TODO: detect if is currently in another action?\n// add update event to a tag or global update\nfunction onUpdate(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tconst obj = add([{ update: tag }]);\n\t\treturn () => destroy(obj);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction onDraw(tag: Tag | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tconst obj = add([{ draw: tag }]);\n\t\treturn () => destroy(obj);\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"draw\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction onCollide(\n\tt1: Tag,\n\tt2: Tag,\n\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n): EventCanceller {\n\tconst e1 = on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n\tconst e2 = on(\"collide\", t2, (a, b, col) => b.is(t1) && f(b, a, col));\n\tconst e3 = onUpdate(t1, (o1: GameObj) => {\n\t\tif (!o1.area) {\n\t\t\tthrow new Error(\"onCollide() requires the object to have area() component\");\n\t\t}\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n\treturn () => [e1, e2, e3].forEach((f) => f());\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction onClick(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\") {\n\t\treturn onMousePress(tag);\n\t} else {\n\t\treturn onUpdate(tag, (o: GameObj) => {\n\t\t\tif (!o.area) throw new Error(\"onClick() requires the object to have area() component\");\n\t\t\tif (o.isClicked()) {\n\t\t\t\tcb(o);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// add an event that runs when objs with tag t is hovered\nfunction onHover(t: string, onHover: (obj: GameObj) => void, onNotHover?: (obj: GameObj) => void): EventCanceller {\n\treturn onUpdate(t, (o: GameObj) => {\n\t\tif (!o.area) throw new Error(\"onHover() requires the object to have area() component\");\n\t\tif (o.isHovering()) {\n\t\t\tonHover(o);\n\t\t} else {\n\t\t\tif (onNotHover) {\n\t\t\t\tonNotHover(o);\n\t\t\t}\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tgame.timers.push({\n\t\t\ttime: t,\n\t\t\taction: () => {\n\t\t\t\tif (f) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t},\n\t\t});\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): EventCanceller {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn () => stopped = true;\n\n}\n\n// input callbacks\nfunction onKeyDown(k: Key | Key[], f: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyDown(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} {\n\t\treturn game.on(\"input\", () => app.isKeyDown(k) && f());\n\t}\n}\n\nfunction onKeyPress(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPress(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressed(k) && f());\n\t}\n}\n\nfunction onKeyPressRepeat(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPressRepeat(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressedRepeat(k) && f());\n\t}\n}\n\nfunction onKeyRelease(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyRelease(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyReleased() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyReleased(k) && f());\n\t}\n}\n\nfunction onMouseDown(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseDown() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseDown(m) && action(mousePos()));\n\t}\n}\n\nfunction onMousePress(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMousePressed() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMousePressed(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseRelease(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseReleased() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseReleased(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.isMouseMoved() && f(mousePos(), app.mouseDeltaPos()));\n}\n\nfunction onCharInput(f: (ch: string) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.charInputted().forEach((ch) => f(ch)));\n}\n\n// TODO: put this in app.ts's and handle in game loop\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchStart\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchMove\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchEnd\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\nfunction onTouchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchStart\", f);\n}\n\nfunction onTouchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchMove\", f);\n}\n\nfunction onTouchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchEnd\", f);\n}\n\nfunction enterDebugMode() {\n\n\tonKeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t});\n\n\tonKeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tonKeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t});\n\n\tonKeyPress(\"f7\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f9\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t});\n\n\tonKeyPress(\"f5\", () => {\n\t\tdownloadURL(app.screenshot(), \"kaboom.png\");\n\t});\n\n\tonKeyPress(\"f6\", () => {\n\t\tif (debug.curRecording) {\n\t\t\tdebug.curRecording.download();\n\t\t\tdebug.curRecording = null;\n\t\t} else {\n\t\t\tdebug.curRecording = record();\n\t\t}\n\t});\n\n}\n\nfunction enterBurpMode() {\n\tonKeyPress(\"b\", audio.burp);\n}\n\n// TODO: cache sorted list\n// get all objects with tag\nfunction get(t?: Tag | Tag[]): GameObj[] {\n\n\tconst objs = [...game.objs.values()].sort((o1, o2) => {\n\n\t\tconst l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n\t\tconst l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\n\t\t// if on same layer, use \"z\" comp to decide which is on top, if given\n\t\tif (l1 == l2) {\n\t\t\treturn (o1.z ?? 0) - (o2.z ?? 0);\n\t\t} else {\n\t\t\treturn l1 - l2;\n\t\t}\n\n\t});\n\n\tif (!t) {\n\t\treturn objs;\n\t} else {\n\t\treturn objs.filter(obj => obj.is(t));\n\t}\n\n}\n\n// apply a function to all objects currently in game with tag t\nfunction every<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// every but in reverse order\nfunction revery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().reverse().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).reverse().forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// destroy an obj\nfunction destroy(obj: GameObj) {\n\tobj.destroy();\n}\n\n// destroy all obj with the tag\nfunction destroyAll(t: string) {\n\tevery(t, destroy);\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tif (g !== undefined) {\n\t\tgame.gravity = g;\n\t}\n\treturn game.gravity;\n}\n\nfunction regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n\t// TODO\n}\n\nfunction makeCollision(target: GameObj<any>, dis: Vec2): Collision {\n\treturn {\n\t\ttarget: target,\n\t\tdisplacement: dis,\n\t\tisTop: () => dis.y > 0,\n\t\tisBottom: () => dis.y < 0,\n\t\tisLeft: () => dis.x > 0,\n\t\tisRight: () => dis.x < 0,\n\t};\n}\n\n// TODO: manage global velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tid: \"pos\",\n\t\tpos: vec2(...args),\n\n\t\t// TODO: clean\n\t\tmoveBy(...args): Collision | null {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tlet dx = p.x;\n\t\t\tlet dy = p.y;\n\t\t\tlet col = null;\n\n\t\t\tif (this.solid && this.area?.shape === \"rect\") {\n\n\t\t\t\tlet a1 = this.worldArea();\n\n\t\t\t\t// TODO: definitely shouln't iterate through all solid objs\n\t\t\t\tevery((other) => {\n\n\t\t\t\t\t// make sure we still exist, don't check with self, and only\n\t\t\t\t\t// check with other solid objects\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.exists()\n\t\t\t\t\t\t|| other === this\n\t\t\t\t\t\t|| !other.solid\n\t\t\t\t\t\t|| other.area?.shape !== \"rect\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst a2 = other.worldArea();\n\t\t\t\t\tlet md = minkDiff(a2, a1);\n\n\t\t\t\t\t// if they're already overlapping, push them away first\n\t\t\t\t\tif (testRectPoint(md, vec2(0))) {\n\n\t\t\t\t\t\tlet dist = Math.min(\n\t\t\t\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\t\t\t\tMath.abs(md.p2.y),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst res = (() => {\n\t\t\t\t\t\t\tswitch (dist) {\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tthis.pos = this.pos.sub(res);\n\n\t\t\t\t\t\t// calculate new mink diff\n\t\t\t\t\t\ta1 = this.worldArea();\n\t\t\t\t\t\tmd = minkDiff(a2, a1);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ray = { p1: vec2(0), p2: vec2(dx, dy) };\n\t\t\t\t\tlet minT = 1;\n\t\t\t\t\tconst p1 = md.p1;\n\t\t\t\t\tconst p2 = vec2(md.p1.x, md.p2.y);\n\t\t\t\t\tconst p3 = md.p2;\n\t\t\t\t\tconst p4 = vec2(md.p2.x, md.p1.y);\n\t\t\t\t\tlet numCols = 0;\n\t\t\t\t\tconst lines = {\n\t\t\t\t\t\t\"right\": { p1: p1, p2: p2, },\n\t\t\t\t\t\t\"top\": { p1: p2, p2: p3, },\n\t\t\t\t\t\t\"left\": { p1: p3, p2: p4, },\n\t\t\t\t\t\t\"bottom\": { p1: p4, p2: p1, },\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const s in lines) {\n\t\t\t\t\t\tconst line = lines[s];\n\t\t\t\t\t\t// if moving along a side, we forgive\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dx === 0 && line.p1.x === 0 && line.p2.x === 0)\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tminT = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = testLineLineT(ray, line);\n\t\t\t\t\t\tif (t != null) {\n\t\t\t\t\t\t\tnumCols++;\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if moving away, we forgive\n\t\t\t\t\tif (\n\t\t\t\t\t\tminT < 1\n\t\t\t\t\t\t&& !(minT === 0 && numCols == 1 && !testRectPoint(md, vec2(dx, dy)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst dis = vec2(-dx * (1 - minT), -dy * (1 - minT));\n\t\t\t\t\t\tdx *= minT;\n\t\t\t\t\t\tdy *= minT;\n\t\t\t\t\t\tcol = makeCollision(other, dis);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t\tif (col) {\n\t\t\t\tthis.trigger(\"collide\", col.target, col);\n\t\t\t\tcol.target.trigger(\"collide\", this, makeCollision(this, col.displacement.scale(-1)));\n\t\t\t}\n\n\t\t\treturn col;\n\n\t\t},\n\n\t\t// move with velocity (pixels per second)\n\t\tmove(...args): Collision | null {\n\t\t\treturn this.moveBy(vec2(...args).scale(dt()));\n\t\t},\n\n\t\t// move to a destination, with optional speed\n\t\tmoveTo(...args) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2]);\n\t\t\t}\n\t\t\tconst dest = args[0];\n\t\t\tconst speed = args[1];\n\t\t\tif (speed === undefined) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst diff = dest.sub(this.pos);\n\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.move(diff.unit().scale(speed));\n\t\t},\n\n\t\t// get the screen position (transformed by camera)\n\t\tscreenPos(): Vec2 {\n\t\t\tif (this.fixed) {\n\t\t\t\treturn this.pos;\n\t\t\t} else {\n\t\t\t\treturn toScreen(this.pos);\n\t\t\t}\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n\t\t},\n\n\t};\n\n};\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tid: \"scale\",\n\t\tscale: vec2(...args),\n\t\tscaleTo(...args) {\n\t\t\tthis.scale = vec2(...args);\n\t\t},\n\t\tinspect() {\n\t\t\tif (typeof this.scale === \"number\") {\n\t\t\t\treturn `${toFixed(this.scale, 2)}`;\n\t\t\t} else {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tid: \"rotate\",\n\t\tangle: r ?? 0,\n\t\tinspect() {\n\t\t\treturn `${Math.round(this.angle)}`;\n\t\t},\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tid: \"color\",\n\t\tcolor: rgb(...args),\n\t\tinspect() {\n\t\t\treturn this.color.str();\n\t\t},\n\t};\n}\n\nfunction toFixed(n: number, f: number) {\n\treturn Number(n.toFixed(f));\n}\n\nfunction opacity(a: number): OpacityComp {\n\treturn {\n\t\tid: \"opacity\",\n\t\topacity: a ?? 1,\n\t\tinspect() {\n\t\t\treturn `${toFixed(this.opacity, 2)}`;\n\t\t},\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\tif (!o) {\n\t\tthrow new Error(\"please define an origin\");\n\t}\n\treturn {\n\t\tid: \"origin\",\n\t\torigin: o,\n\t\tinspect() {\n\t\t\tif (typeof this.origin === \"string\") {\n\t\t\t\treturn this.origin;\n\t\t\t} else {\n\t\t\t\treturn this.origin.str();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tid: \"layer\",\n\t\tlayer: l,\n\t\tinspect() {\n\t\t\treturn this.layer ?? game.defLayer;\n\t\t},\n\t};\n}\n\nfunction z(z: number): ZComp {\n\treturn {\n\t\tid: \"z\",\n\t\tz: z,\n\t\tinspect() {\n\t\t\treturn `${this.z}`;\n\t\t},\n\t};\n}\n\nfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\treturn {\n\t\tid: \"follow\",\n\t\trequire: [ \"pos\", ],\n\t\tfollow: {\n\t\t\tobj: obj,\n\t\t\toffset: offset ?? vec2(0),\n\t\t},\n\t\tadd() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction move(direction: number | Vec2, speed: number): MoveComp {\n\tconst d = typeof direction === \"number\" ? dir(direction) : direction.unit();\n\treturn {\n\t\tid: \"move\",\n\t\trequire: [ \"pos\", ],\n\t\tupdate() {\n\t\t\tthis.move(d.scale(speed));\n\t\t},\n\t};\n}\n\nfunction cleanup(time: number = 0): CleanupComp {\n\tlet timer = 0;\n\treturn {\n\t\tid: \"cleanup\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tupdate() {\n\t\t\tconst screenRect = {\n\t\t\t\tp1: vec2(0, 0),\n\t\t\t\tp2: vec2(width(), height()),\n\t\t\t}\n\t\t\tif (testAreaRect(this.screenArea(), screenRect)) {\n\t\t\t\ttimer = 0;\n\t\t\t} else {\n\t\t\t\ttimer += dt();\n\t\t\t\tif (timer >= time) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\tconst colliding = {};\n\n\treturn {\n\n\t\tid: \"area\",\n\n\t\tadd() {\n\t\t\tif (this.area.cursor) {\n\t\t\t\tthis.hovers(() => {\n\t\t\t\t\tapp.cursor(this.area.cursor);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tarea: {\n\t\t\tshape: \"rect\",\n\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\twidth: opt.width,\n\t\t\theight: opt.height,\n\t\t\tscale: opt.scale ?? vec2(1),\n\t\t\tcursor: opt.cursor,\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn app.isMousePressed() && this.isHovering();\n\t\t},\n\n\t\tisHovering() {\n\t\t\tconst mpos = this.fixed ? mousePos() : mouseWorldPos();\n\t\t\treturn this.hasPoint(mpos);\n\t\t},\n\n\t\tisColliding(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testAreaArea(a1, a2);\n\t\t},\n\n\t\tisTouching(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// TODO: support other shapes\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testRectRect2(a1, a2);\n\t\t},\n\n\t\tonClick(f: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonHover(onHover: () => void, onNotHover: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\tonHover();\n\t\t\t\t} else {\n\t\t\t\t\tif (onNotHover) {\n\t\t\t\t\t\tonNotHover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonCollide(tag: Tag, f: (o: GameObj, col?: Collision) => void): EventCanceller {\n\t\t\tconst e1 = this.onUpdate(() => this._checkCollisions(tag, f));\n\t\t\tconst e2 = this.on(\"collide\", (obj, col) => obj.is(tag) && f(obj, col));\n\t\t\treturn () => [e1, e2].forEach((f) => f());\n\t\t},\n\n\t\tclicks(...args) {\n\t\t\treturn this.onClick(...args);\n\t\t},\n\n\t\thovers(...args) {\n\t\t\treturn this.onHover(...args);\n\t\t},\n\n\t\tcollides(...args) {\n\t\t\treturn this.onCollide(...args);\n\t\t},\n\n\t\thasPoint(pt: Vec2): boolean {\n\t\t\treturn testAreaPoint(this.worldArea(), pt);\n\t\t},\n\n\t\t// push an obj out of another if they're overlapped\n\t\tpushOut(obj: GameObj): Vec2 | null {\n\n\t\t\tif (obj === this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: support other shapes\n\t\t\tif (obj.area?.shape !== \"rect\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = obj.worldArea();\n\t\t\tconst md = minkDiff(a1, a2);\n\n\t\t\tif (!testRectPoint(md, vec2(0))) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet dist = Math.min(\n\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\tMath.abs(md.p2.y),\n\t\t\t);\n\n\t\t\tconst res = (() => {\n\t\t\t\tswitch (dist) {\n\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tthis.pos = this.pos.add(res);\n\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tpushOutAll() {\n\t\t\tevery(this.pushOut);\n\t\t},\n\n\t\t// @ts-ignore\n\t\t_checkCollisions(tag: Tag) {\n\n\t\t\tevery(tag, (obj) => {\n\n\t\t\t\tif (this === obj || !this.exists() || colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isColliding(obj)) {\n\t\t\t\t\tthis.trigger(\"collide\", obj, null);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isColliding(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\tworldArea(): Area {\n\n\t\t\tlet w = this.area.width ?? this.width;\n\t\t\tlet h = this.area.height ?? this.height;\n\n\t\t\tif (w == null || h == null) {\n\t\t\t\tthrow new Error(\"failed to get area dimension\");\n\t\t\t}\n\n\t\t\tconst scale = vec2(this.scale ?? 1).scale(this.area.scale);\n\n\t\t\tw *= scale.x;\n\t\t\th *= scale.y;\n\n\t\t\tconst orig = originPt(this.origin || DEF_ORIGIN);\n\t\t\tconst pos = (this.pos ?? vec2(0))\n\t\t\t\t.add(this.area.offset)\n\t\t\t\t.sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n\t\t\treturn {\n\t\t\t\tshape: \"rect\",\n\t\t\t\tp1: pos,\n\t\t\t\tp2: vec2(pos.x + w, pos.y + h),\n\t\t\t};\n\n\t\t},\n\n\t\tscreenArea(): Area {\n\t\t\tconst area = this.worldArea();\n\t\t\tif (this.fixed) {\n\t\t\t\treturn area;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tshape: \"rect\",\n\t\t\t\t\tp1: game.camMatrix.multVec2(area.p1),\n\t\t\t\t\tp2: game.camMatrix.multVec2(area.p2),\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t};\n\n}\n\n// make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\nfunction getRenderProps(obj: GameObj<any>) {\n\treturn {\n\t\tpos: obj.pos,\n\t\tscale: obj.scale,\n\t\tcolor: obj.color,\n\t\topacity: obj.opacity,\n\t\tangle: obj.angle,\n\t\torigin: obj.origin,\n\t\toutline: obj.outline,\n\t\tshader: assets.shaders[obj.shader],\n\t\tuniform: obj.uniform,\n\t};\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// TODO: clean\nfunction sprite(id: string | SpriteData, opt: SpriteCompOpt = {}): SpriteComp {\n\n\tlet spr = null;\n\tlet curAnim: SpriteCurAnim | null = null;\n\n\tfunction calcTexScale(tex: GfxTexture, q: Quad, w?: number, h?: number): Vec2 {\n\t\tconst scale = vec2(1, 1);\n\t\tif (w && h) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t} else if (w) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = scale.x;\n\t\t} else if (h) {\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t\tscale.x = scale.y;\n\t\t}\n\t\treturn scale;\n\t}\n\n\treturn {\n\n\t\tid: \"sprite\",\n\t\t// TODO: allow update\n\t\twidth: 0,\n\t\theight: 0,\n\t\tframe: opt.frame || 0,\n\t\tquad: opt.quad || quad(0, 0, 1, 1),\n\t\tanimSpeed: opt.animSpeed ?? 1,\n\n\t\tload() {\n\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tspr = assets.sprites[id];\n\t\t\t} else {\n\t\t\t\tspr = id;\n\t\t\t}\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tlet q = { ...spr.frames[0] };\n\n\t\t\tif (opt.quad) {\n\t\t\t\tq = q.scale(opt.quad);\n\t\t\t}\n\n\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height);\n\n\t\t\tthis.width = spr.tex.width * q.w * scale.x;\n\t\t\tthis.height = spr.tex.height * q.h * scale.y;\n\n\t\t\tif (opt.anim) {\n\t\t\t\tthis.play(opt.anim);\n\t\t\t}\n\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawSprite({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tsprite: spr,\n\t\t\t\tframe: this.frame,\n\t\t\t\tquad: this.quad,\n\t\t\t\tflipX: opt.flipX,\n\t\t\t\tflipY: opt.flipY,\n\t\t\t\ttiled: opt.tiled,\n\t\t\t\twidth: opt.width,\n\t\t\t\theight: opt.height,\n\t\t\t});\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (anim.speed === 0) {\n\t\t\t\tthrow new Error(\"sprite anim speed cannot be 0\");\n\t\t\t}\n\n\t\t\tcurAnim.timer += dt() * this.animSpeed;\n\n\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\tcurAnim.timer = 0;\n\t\t\t\t// TODO: clean up\n\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame++;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: this opt should be used instead of the sprite data opt, if given\n\t\tplay(name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\tif (!spr) {\n\t\t\t\tonLoad(() => {\n\t\t\t\t\tthis.play(name);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (anim == null) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\ttimer: 0,\n\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t};\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t} else {\n\t\t\t\tthis.frame = anim.from;\n\t\t\t}\n\n\t\t\t// TODO: \"animPlay\" is deprecated\n\t\t\tthis.trigger(\"animPlay\", name);\n\t\t\tthis.trigger(\"animStart\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tnumFrames() {\n\t\t\tif (!spr) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tflipX(b: boolean) {\n\t\t\topt.flipX = b;\n\t\t},\n\n\t\tflipY(b: boolean) {\n\t\t\topt.flipY = b;\n\t\t},\n\n\t\tonAnimEnd(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animEnd\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonAnimStart(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animStart\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tinspect() {\n\t\t\tlet msg = \"\";\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tmsg += JSON.stringify(id);\n\t\t\t} else {\n\t\t\t\tmsg += \"[blob]\";\n\t\t\t}\n\t\t\treturn msg;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\tfunction update() {\n\n\t\tconst name = this.font ?? gopt.font ?? DEF_FONT;\n\t\tconst font = assets.fonts[name];\n\n\t\tif (!font) {\n\t\t\tthrow new Error(`font not found: \"${name}\"`);\n\t\t}\n\n\t\tconst ftext = gfx.fmtText({\n\t\t\t...getRenderProps(this),\n\t\t\ttext: this.text + \"\",\n\t\t\tsize: this.textSize,\n\t\t\tfont: font,\n\t\t\twidth: opt.width,\n\t\t\ttransform: opt.transform,\n\t\t});\n\n\t\tthis.width = ftext.width / (this.scale?.x || 1);\n\t\tthis.height = ftext.height / (this.scale?.y || 1);\n\n\t\treturn ftext;\n\n\t};\n\n\treturn {\n\n\t\tid: \"text\",\n\t\ttext: t,\n\t\ttextSize: opt.size,\n\t\tfont: opt.font,\n\t\twidth: 0,\n\t\theight: 0,\n\n\t\tload() {\n\t\t\tupdate.call(this);\n\t\t},\n\n\t\tdraw() {\n\t\t\tgfx.drawFmtText(update.call(this));\n\t\t},\n\n\t};\n\n}\n\nfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tradius: opt.radius || 0,\n\t\tdraw() {\n\t\t\tgfx.drawRect({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction uvquad(w: number, h: number): UVQuadComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tdraw() {\n\t\t\tgfx.drawUVQuad({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction circle(radius: number): CircleComp {\n\treturn {\n\t\tid: \"circle\",\n\t\tradius: radius,\n\t\tdraw() {\n\t\t\tgfx.drawCircle({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.radius)}`;\n\t\t},\n\t};\n}\n\nfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\treturn {\n\t\tid: \"outline\",\n\t\toutline: {\n\t\t\twidth,\n\t\t\tcolor,\n\t\t},\n\t};\n}\n\nfunction timer(n?: number, action?: () => void): TimerComp {\n\tconst timers: IDList<Timer> = new IDList();\n\tif (n && action) {\n\t\ttimers.pushd({\n\t\t\ttime: n,\n\t\t\taction: action,\n\t\t});\n\t}\n\treturn {\n\t\tid: \"timer\",\n\t\twait(n: number, action: () => void): EventCanceller {\n\t\t\treturn timers.pushd({\n\t\t\t\ttime: n,\n\t\t\t\taction: action,\n\t\t\t});\n\t\t},\n\t\tupdate() {\n\t\t\ttimers.forEach((timer, id) => {\n\t\t\t\ttimer.time -= dt();\n\t\t\t\tif (timer.time <= 0) {\n\t\t\t\t\ttimer.action.call(this);\n\t\t\t\t\ttimers.delete(id);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_JUMP_FORCE = 640;\nconst MAX_VEL = 65536;\n\n// TODO: land on wall\nfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tlet canDouble = true;\n\n\treturn {\n\n\t\tid: \"body\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\tweight: opt.weight ?? 1,\n\t\tsolid: opt.solid ?? true,\n\n\t\tupdate() {\n\n\t\t\tlet justFall = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\n\t\t\t\tconst a1 = this.worldArea();\n\t\t\t\tconst a2 = curPlatform.worldArea();\n\t\t\t\tconst y1 = a1.p2.y;\n\t\t\t\tconst y2 = a2.p1.y;\n\t\t\t\tconst x1 = a1.p1.x;\n\t\t\t\tconst x2 = a1.p2.x;\n\t\t\t\tconst x3 = a2.p1.x;\n\t\t\t\tconst x4 = a2.p2.x;\n\n\t\t\t\tif (\n\t\t\t\t\t!curPlatform.exists()\n\t\t\t\t\t|| y1 !== y2\n\t\t\t\t\t|| x2 < x3\n\t\t\t\t\t|| x1 > x4\n\t\t\t\t) {\n\t\t\t\t\tthis.trigger(\"fall\", curPlatform);\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustFall = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos && curPlatform.pos) {\n\t\t\t\t\t\t// TODO: moveBy?\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tconst col = this.move(0, velY);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tif (col) {\n\t\t\t\t\tif (col.isBottom()) {\n\t\t\t\t\t\tcurPlatform = col.target;\n\t\t\t\t\t\tconst oy = velY;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (curPlatform.pos) {\n\t\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!justFall) {\n\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform);\n\t\t\t\t\t\t\tcanDouble = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (col.isTop()) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvelY += gravity() * this.weight * dt();\n\t\t\t\tvelY = Math.min(velY, opt.maxVel ?? MAX_VEL);\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tisGrounded() {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\treturn this.isGrounded();\n\t\t},\n\n\t\tisFalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\treturn this.isFalling();\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tlastPlatformPos = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t\tdoubleJump(force: number) {\n\t\t\tif (this.isGrounded()) {\n\t\t\t\tthis.jump(force);\n\t\t\t} else if (canDouble) {\n\t\t\t\tcanDouble = false;\n\t\t\t\tthis.jump(force);\n\t\t\t\tthis.trigger(\"doubleJump\");\n\t\t\t}\n\t\t},\n\n\t\tonGround(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"ground\", action);\n\t\t},\n\n\t\tonFall(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"fall\", action);\n\t\t},\n\n\t\tonHeadbutt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"headbutt\", action);\n\t\t},\n\n\t\tonDoubleJump(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"doubleJump\", action);\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst shader = assets.shaders[id];\n\treturn {\n\t\tid: \"shader\",\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tid: \"solid\",\n\t\trequire: [ \"area\", ],\n\t\tsolid: true,\n\t};\n}\n\nfunction fixed(): FixedComp {\n\treturn {\n\t\tid: \"fixed\",\n\t\tfixed: true,\n\t};\n}\n\nfunction stay(): StayComp {\n\treturn {\n\t\tid: \"stay\",\n\t\tstay: true,\n\t};\n}\n\nfunction health(hp: number): HealthComp {\n\tif (hp == null) {\n\t\tthrow new Error(\"health() requires the initial amount of hp\");\n\t}\n\treturn {\n\t\tid: \"health\",\n\t\thurt(n: number = 1) {\n\t\t\tthis.setHP(hp - n);\n\t\t\tthis.trigger(\"hurt\");\n\t\t},\n\t\theal(n: number = 1) {\n\t\t\tthis.setHP(hp + n);\n\t\t\tthis.trigger(\"heal\");\n\t\t},\n\t\thp(): number {\n\t\t\treturn hp;\n\t\t},\n\t\tsetHP(n: number) {\n\t\t\thp = n;\n\t\t\tif (hp <= 0) {\n\t\t\t\tthis.trigger(\"death\");\n\t\t\t}\n\t\t},\n\t\tonHurt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"hurt\", action);\n\t\t},\n\t\tonHeal(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"heal\", action);\n\t\t},\n\t\tonDeath(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"death\", action);\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${hp}`;\n\t\t},\n\t};\n}\n\nfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\tif (time == null) {\n\t\tthrow new Error(\"lifespan() requires time\");\n\t}\n\tlet timer = 0;\n\tconst fade = opt.fade ?? 0;\n\tconst startFade = Math.max((time - fade), 0);\n\treturn {\n\t\tid: \"lifespan\",\n\t\tupdate() {\n\t\t\ttimer += dt();\n\t\t\t// TODO: don't assume 1 as start opacity\n\t\t\tif (timer >= startFade) {\n\t\t\t\tthis.opacity = map(timer, startFade, time, 1, 0);\n\t\t\t}\n\t\t\tif (timer >= time) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction state(initState: string, stateList?: string[]): StateComp {\n\n\tif (!initState) {\n\t\tthrow new Error(\"state() requires an initial state\");\n\t}\n\n\tconst events = {};\n\n\tfunction initStateHook(state: string) {\n\t\tif (!events[state]) {\n\t\t\tevents[state] = {\n\t\t\t\tenter: [],\n\t\t\t\tleave: [],\n\t\t\t\tupdate: [],\n\t\t\t\tdraw: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction on(event, state, action) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].push(action);\n\t}\n\n\tfunction trigger(event, state, ...args) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].forEach((action) => action(...args));\n\t}\n\n\treturn {\n\t\tid: \"state\",\n\t\tstate: initState,\n\t\tenterState(state: string, ...args) {\n\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\tthrow new Error(`State not found: ${state}`);\n\t\t\t}\n\t\t\ttrigger(\"leave\", this.state, ...args);\n\t\t\tthis.state = state;\n\t\t\ttrigger(\"enter\", this.state, ...args);\n\t\t},\n\t\tonStateEnter(state: string, action: () => void) {\n\t\t\ton(\"enter\", state, action);\n\t\t},\n\t\tonStateUpdate(state: string, action: () => void) {\n\t\t\ton(\"update\", state, action);\n\t\t},\n\t\tonStateDraw(state: string, action: () => void) {\n\t\t\ton(\"draw\", state, action);\n\t\t},\n\t\tonStateLeave(state: string, action: () => void) {\n\t\t\ton(\"leave\", state, action);\n\t\t},\n\t\tupdate() {\n\t\t\ttrigger(\"update\", this.state);\n\t\t},\n\t\tdraw() {\n\t\t\ttrigger(\"draw\", this.state);\n\t\t},\n\t};\n\n}\n\nconst debug: Debug = {\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: app.fps,\n\tobjCount(): number {\n\t\treturn game.objs.size;\n\t},\n\tstepFrame: updateFrame,\n\tdrawCalls: gfx.drawCalls,\n\tclearLog: logger.clear,\n\tlog: (msg) => logger.info(`[${app.time().toFixed(2)}] ${msg}`),\n\terror: (msg) => logger.error(`[${app.time().toFixed(2)}] ${msg}`),\n\tcurRecording: null,\n\tget paused() {\n\t\treturn game.paused;\n\t},\n\tset paused(v) {\n\t\tgame.paused = v;\n\t\tif (v) {\n\t\t\taudio.ctx.suspend();\n\t\t} else {\n\t\t\taudio.ctx.resume();\n\t\t}\n\t}\n};\n\nfunction onLoad(cb: () => void): void {\n\tif (game.loaded) {\n\t\tcb();\n\t} else {\n\t\tgame.on(\"load\", cb);\n\t}\n}\n\nfunction scene(id: SceneID, def: SceneDef) {\n\tgame.scenes[id] = def;\n}\n\nfunction go(id: SceneID, ...args) {\n\n\tif (!game.scenes[id]) {\n\t\tthrow new Error(`scene not found: ${id}`);\n\t}\n\n\tconst cancel = game.on(\"updateStart\", () => {\n\n\t\tgame.events = {};\n\n\t\tgame.objEvents = {\n\t\t\tadd: new IDList(),\n\t\t\tupdate: new IDList(),\n\t\t\tdraw: new IDList(),\n\t\t\tdestroy: new IDList(),\n\t\t};\n\n\t\tgame.objs.forEach((obj) => {\n\t\t\tif (!obj.stay) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t});\n\n\t\tgame.timers = new IDList();\n\n\t\t// cam\n\t\tgame.cam = {\n\t\t\tpos: center(),\n\t\t\tscale: vec2(1, 1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t};\n\n\t\tgame.camMousePos = app.mousePos();\n\t\tgame.camMatrix = mat4();\n\n\t\tgame.layers = {};\n\t\tgame.defLayer = null;\n\t\tgame.gravity = DEF_GRAVITY;\n\n\t\tgame.scenes[id](...args);\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode();\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode();\n\t\t}\n\n\t\tcancel();\n\n\t});\n\n}\n\nfunction getData<T>(key: string, def?: T): T {\n\ttry {\n\t\treturn JSON.parse(window.localStorage[key]);\n\t} catch {\n\t\tif (def) {\n\t\t\tsetData(key, def);\n\t\t\treturn def;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction setData(key: string, data: any) {\n\twindow.localStorage[key] = JSON.stringify(data);\n}\n\nfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\tconst funcs = plugin(ctx);\n\tfor (const k in funcs) {\n\t\t// @ts-ignore\n\t\tctx[k] = funcs[k];\n\t\tif (gopt.global !== false) {\n\t\t\t// @ts-ignore\n\t\t\twindow[k] = funcs[k];\n\t\t}\n\t}\n\treturn ctx as unknown as MergeObj<T> & KaboomCtx;\n}\n\nfunction center(): Vec2 {\n\treturn vec2(width() / 2, height() / 2);\n}\n\nfunction grid(level: Level, p: Vec2) {\n\n\treturn {\n\n\t\tid: \"grid\",\n\t\tgridPos: p.clone(),\n\n\t\tsetGridPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\tthis.gridPos = p.clone();\n\t\t\tthis.pos = vec2(\n\t\t\t\tlevel.offset().x + this.gridPos.x * level.gridWidth(),\n\t\t\t\tlevel.offset().y + this.gridPos.y * level.gridHeight()\n\t\t\t);\n\t\t},\n\n\t\tmoveLeft() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t},\n\n\t\tmoveRight() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t},\n\n\t\tmoveUp() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t},\n\n\t\tmoveDown() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t},\n\n\t};\n\n}\n\nfunction addLevel(map: string[], opt: LevelOpt): Level {\n\n\tif (!opt.width || !opt.height) {\n\t\tthrow new Error(\"Must provide level grid width & height.\");\n\t}\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(opt.pos || vec2(0));\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\toffset() {\n\t\t\treturn offset.clone();\n\t\t},\n\n\t\tgridWidth() {\n\t\t\treturn opt.width;\n\t\t},\n\n\t\tgridHeight() {\n\t\t\treturn opt.height;\n\t\t},\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, ...args): GameObj {\n\n\t\t\tconst p = vec2(...args);\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (opt[sym]) {\n\t\t\t\t\tif (typeof opt[sym] !== \"function\") {\n\t\t\t\t\t\tthrow new Error(\"level symbol def must be a function returning a component list\");\n\t\t\t\t\t}\n\t\t\t\t\treturn opt[sym](p);\n\t\t\t\t} else if (opt.any) {\n\t\t\t\t\treturn opt.any(sym, p);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst posComp = vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\n\t\t\tfor (const comp of comps) {\n\t\t\t\tif (comp.id === \"pos\") {\n\t\t\t\t\tposComp.x += comp.pos.x;\n\t\t\t\t\tposComp.y += comp.pos.y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomps.push(pos(posComp));\n\t\t\tcomps.push(grid(this, p));\n\n\t\t\tconst obj = add(comps);\n\n\t\t\tobjs.push(obj);\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * opt.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * opt.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nfunction record(frameRate?): Recording {\n\n\tconst stream = app.canvas.captureStream(frameRate);\n\tconst audioDest = audio.ctx.createMediaStreamDestination();\n\n\taudio.masterNode.connect(audioDest)\n\n\tconst audioStream = audioDest.stream;\n\tconst [firstAudioTrack] = audioStream.getAudioTracks();\n\n\t// TODO: Enabling audio results in empty video if no audio received\n\t// stream.addTrack(firstAudioTrack);\n\n\tconst recorder = new MediaRecorder(stream);\n\tconst chunks = [];\n\n\trecorder.ondataavailable = (e) => {\n\t\tif (e.data.size > 0) {\n\t\t\tchunks.push(e.data);\n\t\t}\n\t};\n\n\trecorder.onerror = (e) => {\n\t\taudio.masterNode.disconnect(audioDest)\n\t\tstream.getTracks().forEach(t => t.stop());\n\t};\n\n\trecorder.start();\n\n\treturn {\n\n\t\tresume() {\n\t\t\trecorder.resume();\n\t\t},\n\n\t\tpause() {\n\t\t\trecorder.pause();\n\t\t},\n\n\t\tdownload(filename = \"kaboom.mp4\") {\n\n\t\t\trecorder.onstop = () => {\n\t\t\t\tdownloadBlob(new Blob(chunks, {\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t}), filename);\n\t\t\t}\n\n\t\t\trecorder.stop();\n\t\t\t// cleanup\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\n\t\t}\n\t};\n\n}\n\nconst ctx: KaboomCtx = {\n\t// asset load\n\tloadRoot: assets.loadRoot,\n\tloadSprite: assets.loadSprite,\n\tloadSpriteAtlas: assets.loadSpriteAtlas,\n\tloadSound: assets.loadSound,\n\tloadFont: assets.loadFont,\n\tloadShader: assets.loadShader,\n\tloadAseprite: assets.loadAseprite,\n\tloadPedit: assets.loadPedit,\n\tloadBean: assets.loadBean,\n\tload: assets.load,\n\t// query\n\twidth,\n\theight,\n\tcenter,\n\tdt,\n\ttime: app.time,\n\tscreenshot: app.screenshot,\n\trecord: record,\n\tfocused: app.isFocused,\n\tisFocused: app.isFocused,\n\tfocus: app.focus,\n\tcursor: app.cursor,\n\tregCursor,\n\tfullscreen: app.fullscreen,\n\tisFullscreen: app.isFullscreen,\n\tonLoad,\n\tready: onLoad,\n\tisTouch: () => app.isTouch,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tshake,\n\ttoScreen,\n\ttoWorld,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\topacity,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tcircle,\n\tuvquad,\n\toutline,\n\tbody,\n\tshader,\n\ttimer,\n\tsolid,\n\tfixed,\n\tstay,\n\thealth,\n\tlifespan,\n\tz,\n\tmove,\n\tcleanup,\n\tfollow,\n\tstate,\n\t// group events\n\ton,\n\tonUpdate,\n\tonDraw,\n\tonCollide,\n\tonClick,\n\tonHover,\n\taction: onUpdate,\n\trender: onDraw,\n\tcollides: onCollide,\n\tclicks: onClick,\n\thovers: onHover,\n\t// input\n\tonKeyDown,\n\tonKeyPress,\n\tonKeyPressRepeat,\n\tonKeyRelease,\n\tonMouseDown,\n\tonMousePress,\n\tonMouseRelease,\n\tonMouseMove,\n\tonCharInput,\n\tonTouchStart,\n\tonTouchMove,\n\tonTouchEnd,\n\tkeyDown: onKeyDown,\n\tkeyPress: onKeyPress,\n\tkeyPressRep: onKeyPressRepeat,\n\tkeyRelease: onKeyRelease,\n\tmouseDown: onMouseDown,\n\tmouseClick: onMousePress,\n\tmouseRelease: onMouseRelease,\n\tmouseMove: onMouseMove,\n\tcharInput: onCharInput,\n\ttouchStart: onTouchStart,\n\ttouchMove: onTouchMove,\n\ttouchEnd: onTouchEnd,\n\tmousePos,\n\tmouseWorldPos,\n\tmouseDeltaPos: app.mouseDeltaPos,\n\tisKeyDown: app.isKeyDown,\n\tisKeyPressed: app.isKeyPressed,\n\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\tisKeyReleased: app.isKeyReleased,\n\tisMouseDown: app.isMouseDown,\n\tisMousePressed: app.isMousePressed,\n\tisMouseReleased: app.isMouseReleased,\n\tisMouseMoved: app.isMouseMoved,\n\tkeyIsDown: app.isKeyDown,\n\tkeyIsPressed: app.isKeyPressed,\n\tkeyIsPressedRep: app.isKeyPressedRepeat,\n\tkeyIsReleased: app.isKeyReleased,\n\tmouseIsDown: app.isMouseDown,\n\tmouseIsClicked: app.isMousePressed,\n\tmouseIsReleased: app.isMouseReleased,\n\tmouseIsMoved: app.isMouseMoved,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume: audio.volume,\n\tburp: audio.burp,\n\taudioCtx: audio.ctx,\n\t// math\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tvec2,\n\tdir,\n\trgb,\n\thsl2rgb,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\t// TODO: wrap these to use assets lib for the \"shader\" prop\n\tdrawRect: gfx.drawRect,\n\tdrawLine: gfx.drawLine,\n\tdrawLines: gfx.drawLines,\n\tdrawTriangle: gfx.drawTriangle,\n\tdrawCircle: gfx.drawCircle,\n\tdrawEllipse: gfx.drawEllipse,\n\tdrawUVQuad: gfx.drawUVQuad,\n\tdrawPolygon: gfx.drawPolygon,\n\tpushTransform: gfx.pushTransform,\n\tpopTransform: gfx.popTransform,\n\tpushTranslate: gfx.pushTranslate,\n\tpushRotate: gfx.pushRotateZ,\n\tpushScale: gfx.pushScale,\n\t// debug\n\tdebug,\n\t// scene\n\tscene,\n\tgo,\n\t// level\n\taddLevel,\n\t// storage\n\tgetData,\n\tsetData,\n\t// plugin\n\tplug,\n\t// char sets\n\tASCII_CHARS,\n\tCP437_CHARS,\n\t// dirs\n\tLEFT: vec2(-1, 0),\n\tRIGHT: vec2(1, 0),\n\tUP: vec2(0, -1),\n\tDOWN: vec2(0, 1),\n\t// colors\n\tRED: rgb(255, 0, 0),\n\tGREEN: rgb(0, 255, 0),\n\tBLUE: rgb(0, 0, 255),\n\tYELLOW: rgb(255, 255, 0),\n\tMAGENTA: rgb(255, 0, 255),\n\tCYAN: rgb(0, 255, 255),\n\tWHITE: rgb(255, 255, 255),\n\tBLACK: rgb(0, 0, 0),\n\t// dom\n\tcanvas: app.canvas,\n};\n\nplug(kaboomPlugin);\n\nif (gopt.plugins) {\n\tgopt.plugins.forEach(plug);\n}\n\nif (gopt.global !== false) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nlet numFrames = 0;\n\nfunction frames() {\n\treturn numFrames;\n}\n\nfunction updateFrame() {\n\n\tgame.trigger(\"updateStart\");\n\n\t// update timers\n\tgame.timers.forEach((t, id) => {\n\t\tt.time -= dt();\n\t\tif (t.time <= 0) {\n\t\t\t// TODO: some timer action causes crash on FF when dt is really high, not sure why\n\t\t\tt.action();\n\t\t\tgame.timers.delete(id);\n\t\t}\n\t});\n\n\t// update every obj\n\trevery((obj) => {\n\t\tif (!obj.paused) {\n\t\t\tobj.trigger(\"update\", obj);\n\t\t}\n\t});\n\n}\n\nfunction drawFrame() {\n\n\t// calculate camera matrix\n\tconst size = vec2(width(), height());\n\tconst cam = game.cam;\n\tconst shake = dir(rand(0, 360)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tgame.camMatrix = mat4()\n\t\t.translate(size.scale(0.5))\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(size.scale(-0.5))\n\t\t.translate(cam.pos.scale(-1).add(size.scale(0.5)).add(shake))\n\t\t;\n\n\t// draw every obj\n\tevery((obj) => {\n\n\t\tif (!obj.hidden) {\n\n\t\t\tgfx.pushTransform();\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tobj.trigger(\"draw\");\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t});\n\n}\n\nfunction drawLoadScreen() {\n\n\t// if assets are not fully loaded, draw a progress bar\n\tconst progress = assets.loadProgress();\n\n\tif (progress === 1) {\n\t\tgame.loaded = true;\n\t\tgame.trigger(\"load\");\n\t} else {\n\n\t\tconst w = width() / 2;\n\t\tconst h = 24 / gfx.scale();\n\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n\t\tgfx.drawRect({\n\t\t\tpos: vec2(0),\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tfill: false,\n\t\t\toutline: {\n\t\t\t\twidth: 4 / gfx.scale(),\n\t\t\t},\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w * progress,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\nfunction drawDebug() {\n\n\tif (debug.inspect) {\n\n\t\tlet inspecting = null;\n\t\tconst font = assets.fonts[DBG_FONT];\n\t\tconst lcolor = rgb(gopt.inspectColor ?? [0, 0, 255]);\n\n\t\tfunction drawInspectTxt(pos, txt) {\n\n\t\t\tconst s = app.scale;\n\t\t\tconst pad = vec2(8);\n\n\t\t\tgfx.pushTransform();\n\t\t\tgfx.pushTranslate(pos);\n\t\t\tgfx.pushScale(1 / s);\n\n\t\t\tconst ftxt = gfx.fmtText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: font,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\n\t\t\tconst bw = ftxt.width + pad.x * 2;\n\t\t\tconst bh = ftxt.height + pad.x * 2;\n\n\t\t\tif (pos.x + bw / s >= width()) {\n\t\t\t\tgfx.pushTranslate(vec2(-bw, 0));\n\t\t\t}\n\n\t\t\tif (pos.y + bh / s >= height()) {\n\t\t\t\tgfx.pushTranslate(vec2(0, -bh));\n\t\t\t}\n\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftxt);\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t\t// draw area outline\n\t\tevery((obj) => {\n\n\t\t\tif (!obj.area) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (obj.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst scale = gfx.scale() * (obj.fixed ? 1: (game.cam.scale.x + game.cam.scale.y) / 2);\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.pushTransform();\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovering()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 8 : 4) / scale;\n\t\t\tconst a = obj.worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: a.p1,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\toutline: {\n\t\t\t\t\twidth: lwidth,\n\t\t\t\t\tcolor: lcolor,\n\t\t\t\t},\n\t\t\t\tfill: false,\n\t\t\t});\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.popTransform();\n\t\t\t}\n\n\t\t});\n\n\t\tif (inspecting) {\n\n\t\t\tconst lines = [];\n\t\t\tconst data = inspecting.inspect();\n\n\t\t\tfor (const tag in data) {\n\t\t\t\tif (data[tag]) {\n\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`);\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(`${tag}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectTxt(mousePos(), lines.join(\"\\n\"));\n\n\t\t}\n\n\t\tdrawInspectTxt(vec2(8 / app.scale), `FPS: ${app.fps()}`);\n\n\t}\n\n\tif (debug.paused) {\n\n\t\t// top right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), 0);\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, 8);\n\n\t\tconst size = 32;\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\torigin: \"topright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// pause icon\n\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: 4,\n\t\t\t\theight: size * 0.6,\n\t\t\t\torigin: \"center\",\n\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tradius: 2,\n\t\t\t});\n\t\t}\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.timeScale !== 1) {\n\n\t\t// bottom right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, -8);\n\n\t\tconst pad = 8;\n\n\t\t// format text first to get text size\n\t\tconst ftxt = gfx.fmtText({\n\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tsize: 16,\n\t\t\tcolor: rgb(255, 255, 255),\n\t\t\tpos: vec2(-pad),\n\t\t\torigin: \"botright\",\n\t\t});\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\theight: ftxt.height + pad * 2,\n\t\t\torigin: \"botright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// fast forward / slow down icon\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst flipped = debug.timeScale < 1;\n\t\t\tgfx.drawTriangle({\n\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\t\t}\n\n\t\t// text\n\t\tgfx.drawFmtText(ftxt);\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.curRecording) {\n\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(0, height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(24, -24);\n\n\t\tgfx.drawCircle({\n\t\t\tradius: 12,\n\t\t\tcolor: rgb(255, 0, 0),\n\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t});\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.showLog) {\n\t\tlogger.draw();\n\t}\n\n}\n\napp.run(() => {\n\n\tnumFrames++;\n\n\tif (!game.loaded) {\n\t\tgfx.frameStart();\n\t\tdrawLoadScreen();\n\t\tgfx.frameEnd();\n\t} else {\n\n\t\t// TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n\t\tgame.camMousePos = game.camMatrix.invert().multVec2(app.mousePos());\n\t\tgame.trigger(\"input\");\n\n\t\tif (!debug.paused && gopt.debug !== false) {\n\t\t\tupdateFrame();\n\t\t}\n\n\t\tgfx.frameStart();\n\t\tdrawFrame();\n\n\t\tif (gopt.debug !== false) {\n\t\t\tdrawDebug();\n\t\t}\n\n\t\tgfx.frameEnd();\n\n\t}\n\n});\n\nif (gopt.debug !== false) {\n\tenterDebugMode();\n}\n\nif (gopt.burp) {\n\tenterBurpMode();\n}\n\nwindow.addEventListener(\"error\", (e) => {\n\tlogger.error(`Error: ${e.error.message}`);\n\tapp.quit();\n\tapp.run(() => {\n\t\tif (assets.loadProgress() === 1) {\n\t\t\tgfx.frameStart();\n\t\t\tlogger.draw();\n\t\t\tgfx.frameEnd();\n\t\t}\n\t});\n});\n\nreturn ctx;\n\n};\n", "import kaboom from \"kaboom\";\nimport {Howl} from \"howler\";\n\nk = kaboom({\n  \"fullscreen\":true,\"startScene\":\"main\",\n  \"background\":[15,202,235,]\n});\n\n// load assets\nloadPedit(\"fire\", \"sprites/fire.pedit\");\nloadPedit(\"avocado\", \"sprites/avocado.pedit\");\nloadSound(\"avocado-o\", \"sounds/avocado-o.mp3\");\nloadSound(\"score\", \"sounds/score.mp3\");\nloadSound(\"o\", \"sounds/o.mp3\");\nloadSound(\"fire\", \"sounds/fire.mp3\");\nloadSound(\"J2edited\", \"sounds/J2edited.mp3\");\n\nconst avocadoOSound = new Howl({\n  src: ['sounds/avocado-o.mp3'],\n  html5: true,\n  format: ['mp3']\n});\n\nlet startTime = -1;\nlet turbos = 0; \nconst TURBOMAX = 2;\n\nconst music = play(\"J2edited\", {\n  volume: 0.6,\n  loop: true\n});\n\nscene(\"game\", () => {\n  // initialize context\n  const PLAYER_SPEED = 200;\n  let showStats = false;\n\n  music.play();\n\n  layers([\n    \"bg\",\n    \"obj\",\n    \"ui\",\n  ], \"obj\");\n\n  // // implement touch\n  let el = document.getElementsByTagName(\"canvas\")[0];\n  el.addEventListener(\"touchstart\", handleTouchMouseStartMove, false);\n  el.addEventListener(\"touchmove\", handleTouchMouseStartMove, false);\n  let epochTime = Date.now();\n  startTime = Date.now();\n\n  function findPos(obj) {\n    var curleft = 0,\n      curtop = 0;\n\n    if (obj.offsetParent) {\n      do {\n        curleft += obj.offsetLeft;\n        curtop += obj.offsetTop;\n      } while (obj = obj.offsetParent);\n\n      return { x: curleft - document.body.scrollLeft, y: curtop - document.body.scrollTop };\n    }\n  }\n\n  function handleTouchMouseStartMove(evt) {\n    evt.preventDefault();\n    var el = document.getElementsByTagName(\"canvas\")[0];\n    clientRec = el.getBoundingClientRect();\n    x = evt.targetTouches[0].pageX;\n    y = evt.targetTouches[0].pageY;\n    // console.log(\"hTMSM : \", clientRec, x, y);\n    var curTime = Date.now();\n    if (curTime - epochTime > 100) {\n      epochTime = curTime\n    }\n    handleTTouch(x,y);\n  }\n\n  const avocado = add([\n    sprite(\"avocado\"),\n    pos(width() / 2, height() / 2),\n    origin(\"center\"),\n    \"avocado\",\n    // scale(3),\n    {\n      isOFaced: false,\n      lastOFaceTime: time(),\n      dir: pos(0, 0),\n      stopPoint: pos(width()/2, height()/2),\n      dScale: 2\n    },\n    area(),\n  ]);\n\n  avocado.action((r) => {\n    if (r.isOFaced) {\n      r.frame = 1;\n      r.scale = vec2(avocado.dScale + Math.sin(2.5 * (time()- r.lastOFaceTime)) * 2.8);\n      // console.log(time() - r.lastOFaceTime)\n      var ct = time();\n      if (ct - r.lastOFaceTime > 1.3) {\n        r.frame = 0;\n        r.lastOFaceTime = ct;\n        r.isOFaced = false;\n      }\n    }\n    else {\n      r.scale = vec2(avocado.dScale + Math.sin(time()) * .1);\n    }\n\n    if (true\n        && avocado.pos.x > 0\n        && avocado.pos.x < width()\n        && avocado.pos.y > 0\n        && avocado.pos.y < height()\n        && Math.abs(avocado.pos.x - avocado.dir.pos.x) > 10\n        && Math.abs(avocado.pos.y - avocado.dir.pos.y) > 10\n    ) {\n      let angleDeg = avocado.pos.angle(avocado.dir.pos) + 180;\n      // console.log(\"moveAvocadoPos : avocado.pos = \" + avocado.pos.x + \",\" + avocado.pos.y);\n      // console.log(\"moveAvocadoPos : avocado.pos.angle(avocado.dir.pos) = \" + angleDeg);\n      let movX = Math.cos(angleDeg * Math.PI/180) * PLAYER_SPEED;\n      let movY = Math.sin(angleDeg * Math.PI/180) * PLAYER_SPEED;\n      avocado.move(movX, movY);\n    }\n    else {\n      avocado.move(0,0);\n    }\n  });\n\n  keyPress('s', () => {\n    console.log('Toggle stats');\n    showStats = !showStats;\n    get('debugText').forEach((e) => {e.hidden = showStats;});\n  });\n\n  keyPress('t', () => {\n    if (turbos > TURBOMAX) {\n      add([\n        pos(width()/2,height()/10),\n        text(\"MAXIUMUM\\nTURBO\\nENGAGED\", 32),\n        origin(\"top\")\n      ]);\n    }\n    else {\n      add([\n        pos(width()/2,height()/10),\n        text(\"\\nTURBO\\nENGAGED\", 32),\n        origin(\"top\")\n      ]);\n      loop(.75, spawnEnemy);\n      turbos++;\n    }\n    \n  })\n\n  function movePlayerLeft() {\n    if (avocado.pos.x > 0) {\n      avocado.move(-PLAYER_SPEED, 0);\n    }\n  };\n\n  function movePlayerRight() {\n    if (avocado.pos.x < width()) {\n      avocado.move(PLAYER_SPEED, 0);\n    }\n  };\n\n  function movePlayerUp() {\n    if (avocado.pos.y > 0) {\n      avocado.move(0, -PLAYER_SPEED);\n    }\n  };\n\n  function movePlayerDown() {\n    if (avocado.pos.y < height()) {\n      avocado.move(0, PLAYER_SPEED);\n    }\n  };\n\n  function moveAvocadoPos(targetPos) {\n    if (true\n        && avocado.pos.x > 0\n        && avocado.pos.x < width()\n        && avocado.pos.y > 0\n        && avocado.pos.y < height()\n    ) {\n      let angleDeg = avocado.pos.angle(targetPos.pos) + 180;\n      console.log(\"moveAvocadoPos : avocado.pos.angle(targetPos.pos) = \" + angleDeg);\n      let movX = Math.cos(angleDeg * Math.PI/180) * PLAYER_SPEED;\n      let movY = Math.sin(angleDeg * Math.PI/180) * PLAYER_SPEED;\n      avocado.move(movX, movY);\n    }\n  }\n\n  keyDown(\"left\", () => {\n    movePlayerLeft();\n  });\n\n  keyDown(\"right\", () => {\n    movePlayerRight();\n  });\n\n  keyDown(\"up\", () => {\n    movePlayerUp();\n  });\n\n  keyDown(\"down\", () => {\n    movePlayerDown();\n  });\n\n  function spawnEnemy() {\n    let insertPos = pos(rand(10, width() - 10), rand(10, height() - 10));   \n\n    let enemySprite = \"fire\";\n    play('fire', { volume: 0.4 });\n\n    return add([\n      sprite(enemySprite),\n      insertPos,\n      \"enemy\",\n      enemySprite,\n      area(),\n    ]);\n  }\n  action(\"enemy\", (e) => {\n    // console.log(e);\n    e.scale = vec2(1 + 0.1 * Math.sin(time()));\n  });\n\n  collides(\"avocado\", \"enemy\", (b, e) => {\n    // console.log(JSON.stringify(e) );\n    if (e.is(\"rainbowpoop\")) {\n      score.value += 10;\n      shake(12);\n    }\n    else {\n      score.value += 1;\n      shake(b.dScale * 3);\n    }\n    // destroy(b);\n    destroy(e);\n    // addKaboom(e.pos);\n    if (b.dScale < 12) {\n      b.dScale = b.dScale + 0.5;\n    }\n    else {\n      go(\"end\");\n    }\n    b.isOFaced = true;\n    b.lastOFaceTime = time();\n    score.text = score.value;\n    play('o');\n  });\n\n  const score = add([\n    pos(12, 12),\n    text(0, {\n      size: 36,\n      font: \"sinko\",\n    }),\n    // all objects defaults origin to center, we want score text to be top left\n    // plain objects becomes fields of score\n    { value: 0 },\n  ]);\n\n  // display fps\n  const fpsText = add([\n    pos(width() * 0.6, 12), \n    text(\"fps\", { font: \"sinko\" }), \n    { value: 0, },\n    \"debugText\"\n  ]);\n\n  function updateFps() {\n    fpsText.value = parseFloat(debug.fps()).toFixed(3);\n    fpsText.text = \"fps: \" + fpsText.value;\n  };\n  loop(0.1, updateFps);\n\n  const aPosText = add([pos(width() * 0.6, 12 * 2), text(\"apos: \" +  JSON.stringify(avocado.pos), { font: \"sinko\" }), { value: 0 }, \"debugText\"]);\n\n  // display mpos\n  const mousePosText = add([pos(width() * 0.6, 12 * 3), text(\"mpos: no mouse detected\", { font: \"sinko\" }), { value: 0 }, \"debugText\"]);\n  \n  function updateMousePosText() {\n    mp = mousePos();\n    // console.log(\"updateMousePosText.mp: \", JSON.stringify(mp));\n    mousePosText.text = \"mpos: \" + JSON.stringify(mp);\n    aPosText.text = \"apos: \" + JSON.stringify(avocado.pos);\n    var curTime = Date.now();\n    if (curTime - epochTime > 100) {\n      epochTime = curTime\n      // spawnBullet(player.pos);\n    }\n    console.log(\"updateMousePosText => \" + JSON.stringify([mp.x, mp.y]));\n    // avocado.moveTo(mp.x, mp.y);\n    avocado.dir = pos(mp.x, mp.y);\n    avocado.stopPoint = pos(mp.x, mp.y);\n\n  };\n\n  // display tpos\n  const touchPosText = add([pos(width() * 0.6, 12 * 4), text(\"tpos: no touch detected\", { font: \"sinko\" }), { value: 0 }, \"debugText\"]);\n\n  function handleTTouch(x, y) {\n    touchPosText.text = \"tpos: \" + JSON.stringify({ \"x\": Math.ceil(x), \"y\": Math.ceil(y), });\n    aPosText.text = \"apos: \" + JSON.stringify(avocado.pos);\n    // console.log(\"handleTTouch : touchPosText.text\", touchPosText.text);\n    // console.log(\"avocado.pos\", avocado.pos);\n    // moveAvocadoPos(pos(x,y));\n  };\n\n  mouseDown(updateMousePosText);\n\n  avocado.clicks(() => {\n    console.log(\"aloha\");\n    play('avocado-o');\n  });\n\n  get('debugText').forEach((e) => {e.hidden = true;});\n  // spawn an enemy every period\n  loop(.8, spawnEnemy);\n  // play('avocado-o');  \n});\n\nscene(\"main\", () => {\n  const bg = add([\n    pos(width()/2,height()/10),\n    text(\"avocado-o \\n\\nmake me HUGE\\n\\nClick me to start\", 32),\n    origin(\"top\"),\n  ]);\n\n  const musics = add([\n    pos(width()/2, height()),\n    text(\"Music: by @B-Diggs-1\\n\\\"Just Two\\\"\\non Soundcloud\", {\n      size: 32,\n      font: \"apl386o\"\n    }),\n    origin(\"bot\"),\n    layer(\"ui\")    \n  ]);\n\n  const avocado = add([\n    sprite(\"avocado\"),\n    pos(width() / 2, height() * 3 / 4),\n    origin(\"center\"),\n    \"avocado\",\n    scale(2),\n    {\n      isOFaced: false,\n      lastOFaceTime: time()\n    },\n    area(),\n  ]);\n\n  avocado.clicks(() => {\n    console.log(\"main go to game\");\n    // for some strange reason I need to play a sound with Howler ONCE\n    avocadoOSound.play();\n    go(\"game\");\n  });\n\n});\n\nscene(\"end\", () => {\n\n  layers([\n    \"obj\",\n    \"ui\",\n  ], \"obj\");\n\n  turbos = 0; \n\n  let totalTime = Date.now() - startTime;\n\n  const bg = add([\n    pos(width()/2,height()/10),\n    text(\"thank you!\\n\" + totalTime/1000 + \"s\\nI am HUGE!\\n\\nPlay again?\", 32),\n    origin(\"top\"),\n    layer(\"ui\")\n  ]);\n\n  const musics = add([\n    pos(width()/2, height()),\n    text(\"Music: by @B-Diggs-1\\n\\\"Just Two\\\"\\non Soundcloud\", {\n      size: 32,\n      font: \"apl386o\"\n    }),\n    origin(\"bot\"),\n    layer(\"ui\")    \n  ]);\n\n  const avocado = add([\n    sprite(\"avocado\"),\n    pos(width() / 2, height() * 3 / 4),\n    origin(\"center\"),\n    \"avocado\",\n    layer(\"obj\"),\n    scale(12),\n    {\n      isOFaced: false,\n      lastOFaceTime: time()\n    },\n    area()\n  ]);\n\n  avocado.clicks(() => {\n    console.log(\"end scene go to game\");\n    // for some strange reason I need to play a sound with Howler ONCE\n    avocadoOSound.play();\n    go(\"game\");\n  });\n\n});\n\ngo(\"main\");\n"],
  "mappings": "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",
  "names": []
}
